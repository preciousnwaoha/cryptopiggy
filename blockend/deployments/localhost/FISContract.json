{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FAILED",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FundMe__notOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "INSUFFICIENT_FUNDS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "IN_PROGRESS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NOT_AVAILABLE",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NOT_IN_PERCENT_RANGE",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NOT_MEMBER",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "USER_EXISTS",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "circleMemberAdded",
          "type": "bool"
        }
      ],
      "name": "CircleAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "FISWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "setGoal",
          "type": "uint256"
        }
      ],
      "name": "Goal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "targetAmount",
              "type": "uint256"
            },
            {
              "internalType": "enum FISContract.GroupVisibility",
              "name": "visibility",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "category",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "groupMembers",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timeCreated",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct FISContract.Group",
          "name": "groupDetails",
          "type": "tuple"
        }
      ],
      "name": "GroupCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "targetAmount",
              "type": "uint256"
            },
            {
              "internalType": "enum FISContract.GroupVisibility",
              "name": "visibility",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "category",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "groupMembers",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timeCreated",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct FISContract.Group",
          "name": "groupDetails",
          "type": "tuple"
        }
      ],
      "name": "GroupJoined",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "enum FISContract.GroupVisibility",
          "name": "_visibility",
          "type": "uint8"
        }
      ],
      "name": "GroupVisibilityStatus",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "investmentWithdrawn",
          "type": "uint256"
        }
      ],
      "name": "InvestmentWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "targetAmount",
              "type": "uint256"
            },
            {
              "internalType": "enum FISContract.GroupVisibility",
              "name": "visibility",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "category",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "groupMembers",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timeCreated",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct FISContract.Group",
          "name": "groupDetails",
          "type": "tuple"
        }
      ],
      "name": "LeftGroup",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "telosDuration",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timeSaved",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenBalance",
          "type": "uint256"
        }
      ],
      "name": "SaveTelos",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "saveDuration",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timeSaved",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenBalance",
          "type": "uint256"
        }
      ],
      "name": "SaveToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TelosWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensWithdrawn",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "circleAddress",
          "type": "address"
        }
      ],
      "name": "addToCircle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_open",
          "type": "bool"
        },
        {
          "internalType": "enum FISContract.Status",
          "name": "_status",
          "type": "uint8"
        }
      ],
      "name": "changeInvestmentStatus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenRewards",
          "type": "uint256"
        }
      ],
      "name": "changePerentageRewardPerDay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "circleMembers",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_duration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_targetAmount",
          "type": "uint256"
        },
        {
          "internalType": "enum FISContract.GroupVisibility",
          "name": "_visibility",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "_title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_category",
          "type": "uint256"
        }
      ],
      "name": "createGroup",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_depositPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_duration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_percentInterest",
          "type": "uint256"
        }
      ],
      "name": "createInvestment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "disburseProfit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "enum FISContract.GroupVisibility",
          "name": "_visibility",
          "type": "uint8"
        }
      ],
      "name": "editGroup",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllGroups",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "targetAmount",
              "type": "uint256"
            },
            {
              "internalType": "enum FISContract.GroupVisibility",
              "name": "visibility",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "category",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "groupMembers",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timeCreated",
              "type": "uint256"
            }
          ],
          "internalType": "struct FISContract.Group[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllInvestments",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "depositPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "percentInterest",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "investmentParticipants",
              "type": "address[]"
            },
            {
              "internalType": "bool",
              "name": "open",
              "type": "bool"
            },
            {
              "internalType": "enum FISContract.Status",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "totalDeposit",
              "type": "uint256"
            }
          ],
          "internalType": "struct FISContract.Investment[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllUserInvestments",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "depositPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "percentInterest",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "investmentParticipants",
              "type": "address[]"
            },
            {
              "internalType": "bool",
              "name": "open",
              "type": "bool"
            },
            {
              "internalType": "enum FISContract.Status",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "totalDeposit",
              "type": "uint256"
            }
          ],
          "internalType": "struct FISContract.Investment[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getGroupById",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "targetAmount",
              "type": "uint256"
            },
            {
              "internalType": "enum FISContract.GroupVisibility",
              "name": "visibility",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "category",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "groupMembers",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timeCreated",
              "type": "uint256"
            }
          ],
          "internalType": "struct FISContract.Group",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getInvestmentById",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "depositPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "percentInterest",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "investmentParticipants",
              "type": "address[]"
            },
            {
              "internalType": "bool",
              "name": "open",
              "type": "bool"
            },
            {
              "internalType": "enum FISContract.Status",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "totalDeposit",
              "type": "uint256"
            }
          ],
          "internalType": "struct FISContract.Investment",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getInvestmentWallet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUser",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "walletAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "telosBalance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "telosDuration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timeSaved",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "tokens",
              "type": "address[]"
            },
            {
              "internalType": "uint256",
              "name": "rewardsEarned",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "groups",
              "type": "uint256[]"
            },
            {
              "internalType": "address[]",
              "name": "circle",
              "type": "address[]"
            },
            {
              "internalType": "uint256",
              "name": "Goal",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "investmentCollateral",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "investments",
              "type": "uint256[]"
            }
          ],
          "internalType": "struct FISContract.User",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUserTokensData",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenBalance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "saveDuration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timeSaved",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenRewards",
              "type": "uint256"
            }
          ],
          "internalType": "struct FISContract.TokenSavingsData[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "invest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "joinGroup",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "leaveGroup",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        }
      ],
      "name": "saveTelos",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        }
      ],
      "name": "saveTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "goalAmount",
          "type": "uint256"
        }
      ],
      "name": "setGoal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawForInvestment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawTelos",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawTokenRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xf3648204eebb26708fb34559a21773c944ce3c121a8d5ebd572344f829f3d951",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "5581543",
    "logsBloom": "0x
    "blockHash": "0x78a46ffbdd0097f563b068b94e645c6f4ba9189931c31a56b67e5e39cf4a2034",
    "transactionHash": "0xf3648204eebb26708fb34559a21773c944ce3c121a8d5ebd572344f829f3d951",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "5581543",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "7eb58f8ed2e90923daebe1ca5da5db7a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FAILED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FundMe__notOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INSUFFICIENT_FUNDS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IN_PROGRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_AVAILABLE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_IN_PERCENT_RANGE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_MEMBER\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"USER_EXISTS\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"circleMemberAdded\",\"type\":\"bool\"}],\"name\":\"CircleAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FISWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"setGoal\",\"type\":\"uint256\"}],\"name\":\"Goal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"targetAmount\",\"type\":\"uint256\"},{\"internalType\":\"enum FISContract.GroupVisibility\",\"name\":\"visibility\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"category\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"groupMembers\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timeCreated\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct FISContract.Group\",\"name\":\"groupDetails\",\"type\":\"tuple\"}],\"name\":\"GroupCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"targetAmount\",\"type\":\"uint256\"},{\"internalType\":\"enum FISContract.GroupVisibility\",\"name\":\"visibility\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"category\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"groupMembers\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timeCreated\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct FISContract.Group\",\"name\":\"groupDetails\",\"type\":\"tuple\"}],\"name\":\"GroupJoined\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum FISContract.GroupVisibility\",\"name\":\"_visibility\",\"type\":\"uint8\"}],\"name\":\"GroupVisibilityStatus\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"investmentWithdrawn\",\"type\":\"uint256\"}],\"name\":\"InvestmentWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"targetAmount\",\"type\":\"uint256\"},{\"internalType\":\"enum FISContract.GroupVisibility\",\"name\":\"visibility\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"category\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"groupMembers\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timeCreated\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct FISContract.Group\",\"name\":\"groupDetails\",\"type\":\"tuple\"}],\"name\":\"LeftGroup\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"telosDuration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timeSaved\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenBalance\",\"type\":\"uint256\"}],\"name\":\"SaveTelos\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"saveDuration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timeSaved\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenBalance\",\"type\":\"uint256\"}],\"name\":\"SaveToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TelosWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensWithdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"circleAddress\",\"type\":\"address\"}],\"name\":\"addToCircle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_open\",\"type\":\"bool\"},{\"internalType\":\"enum FISContract.Status\",\"name\":\"_status\",\"type\":\"uint8\"}],\"name\":\"changeInvestmentStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenRewards\",\"type\":\"uint256\"}],\"name\":\"changePerentageRewardPerDay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"circleMembers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_targetAmount\",\"type\":\"uint256\"},{\"internalType\":\"enum FISContract.GroupVisibility\",\"name\":\"_visibility\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_category\",\"type\":\"uint256\"}],\"name\":\"createGroup\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_depositPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_percentInterest\",\"type\":\"uint256\"}],\"name\":\"createInvestment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"disburseProfit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"enum FISContract.GroupVisibility\",\"name\":\"_visibility\",\"type\":\"uint8\"}],\"name\":\"editGroup\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllGroups\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"targetAmount\",\"type\":\"uint256\"},{\"internalType\":\"enum FISContract.GroupVisibility\",\"name\":\"visibility\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"category\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"groupMembers\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timeCreated\",\"type\":\"uint256\"}],\"internalType\":\"struct FISContract.Group[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllInvestments\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"depositPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"percentInterest\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"investmentParticipants\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"open\",\"type\":\"bool\"},{\"internalType\":\"enum FISContract.Status\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"totalDeposit\",\"type\":\"uint256\"}],\"internalType\":\"struct FISContract.Investment[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllUserInvestments\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"depositPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"percentInterest\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"investmentParticipants\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"open\",\"type\":\"bool\"},{\"internalType\":\"enum FISContract.Status\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"totalDeposit\",\"type\":\"uint256\"}],\"internalType\":\"struct FISContract.Investment[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getGroupById\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"targetAmount\",\"type\":\"uint256\"},{\"internalType\":\"enum FISContract.GroupVisibility\",\"name\":\"visibility\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"category\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"groupMembers\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timeCreated\",\"type\":\"uint256\"}],\"internalType\":\"struct FISContract.Group\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getInvestmentById\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"depositPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"percentInterest\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"investmentParticipants\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"open\",\"type\":\"bool\"},{\"internalType\":\"enum FISContract.Status\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"totalDeposit\",\"type\":\"uint256\"}],\"internalType\":\"struct FISContract.Investment\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getInvestmentWallet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUser\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"telosBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"telosDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeSaved\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"rewardsEarned\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"groups\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"circle\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"Goal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"investmentCollateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"investments\",\"type\":\"uint256[]\"}],\"internalType\":\"struct FISContract.User\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUserTokensData\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"saveDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeSaved\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenRewards\",\"type\":\"uint256\"}],\"internalType\":\"struct FISContract.TokenSavingsData[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"invest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"joinGroup\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"leaveGroup\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"saveTelos\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"saveTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"goalAmount\",\"type\":\"uint256\"}],\"name\":\"setGoal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawForInvestment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTelos\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTokenRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FIS_Protocol.sol\":\"FISContract\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"contracts/FIS_Protocol.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.7;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface MintingInterface {\\n    function mint(address account, uint256 amount) external;\\n}\\n\\nerror FundMe__notOwner();\\nerror NotOwner();\\nerror INSUFFICIENT_FUNDS();\\nerror USER_EXISTS();\\nerror NOT_MEMBER();\\nerror IN_PROGRESS();\\nerror FAILED();\\nerror NOT_IN_PERCENT_RANGE();\\nerror NOT_AVAILABLE();\\n\\ncontract FISContract {\\n    uint256 private groupCount;\\n    address private immutable i_owner;\\n    MintingInterface private minter;\\n    uint256 private rate = 1;\\n    uint256 private percentageRewardPerDay = 2;\\n    uint256 private investmentCount;\\n    uint256 private investmentWallet;\\n\\n    enum GroupVisibility {\\n        CIRCLE,\\n        PUBLIC\\n    }\\n\\n    enum Status {\\n        IN_PROGRESS,\\n        SUCCESS,\\n        FAILED\\n    }\\n\\n    struct TokenSavingsData {\\n        address tokenAddress;\\n        uint256 tokenBalance;\\n        uint256 saveDuration;\\n        uint256 timeSaved;\\n        uint256 tokenRewards;\\n    }\\n\\n    struct User {\\n        address walletAddress;\\n        uint256 telosBalance;\\n        uint256 telosDuration;\\n        uint256 timeSaved;\\n        address[] tokens;\\n        uint256 rewardsEarned;\\n        uint256[] groups;\\n        address[] circle;\\n        uint256 Goal;\\n        uint256 investmentCollateral;\\n        uint256[] investments;\\n    }\\n\\n    struct Group {\\n        uint256 id;\\n        uint256 duration;\\n        uint256 targetAmount;\\n        GroupVisibility visibility;\\n        string title;\\n        string description;\\n        uint category;\\n        address[] groupMembers;\\n        address creator;\\n        uint timeCreated;\\n    }\\n\\n    struct Investment {\\n        uint256 id;\\n        string title;\\n        string description;\\n        uint256 depositPrice;\\n        uint256 duration;\\n        uint256 percentInterest;\\n        address[] investmentParticipants;\\n        bool open;\\n        Status status;\\n        uint256 totalDeposit;\\n    }\\n\\n    mapping(uint => Group) private groupById;\\n\\n    mapping(address => mapping(address => TokenSavingsData))\\n        private userAddressToTokenToData;\\n\\n    mapping(address => User) private userAddressToUserData;\\n\\n    mapping(address => Investment) private userInvestments;\\n\\n    mapping(uint256 => Investment) private idToInvestment;\\n\\n    Group[] private allGroups;\\n    Investment[] private allInvestments;\\n\\n    event SaveToken(\\n        address indexed tokenAddress,\\n        uint256 saveDuration,\\n        uint256 timeSaved,\\n        uint256 tokenBalance\\n    );\\n    event SaveTelos(\\n        uint256 telosDuration,\\n        uint256 timeSaved,\\n        uint256 tokenBalance\\n    );\\n    event Goal(uint256 setGoal);\\n    event GroupCreated(Group groupDetails);\\n    event GroupVisibilityStatus(\\n        uint256 indexed id,\\n        GroupVisibility _visibility\\n    );\\n    event CircleAdded(bool circleMemberAdded);\\n    event GroupJoined(Group groupDetails);\\n    event TelosWithdrawn(uint256 amount);\\n    event TokensWithdrawn(uint256 amount);\\n    event FISWithdrawn(uint256 amount);\\n    event LeftGroup(Group groupDetails);\\n    event InvestmentWithdrawn(uint256 investmentWithdrawn);\\n\\n    constructor(address tokenAddress) {\\n        minter = MintingInterface(tokenAddress);\\n        i_owner = msg.sender;\\n    }\\n\\n    modifier onlyOwner() {\\n        if (msg.sender == i_owner) revert NotOwner();\\n        _;\\n    }\\n\\n    function saveTokens(\\n        address tokenAddress,\\n        uint256 amount,\\n        uint duration\\n    ) external {\\n        if (amount == 0) revert INSUFFICIENT_FUNDS();\\n        IERC20 allTokens = IERC20(tokenAddress);\\n        uint allowance = allTokens.allowance(msg.sender, address(this));\\n        if (allowance >= amount) revert FundMe__notOwner();\\n\\n        userAddressToTokenToData[msg.sender][tokenAddress].saveDuration =\\n            block.timestamp +\\n            (duration * 1 days);\\n        userAddressToTokenToData[msg.sender][tokenAddress].timeSaved = 0;\\n        userAddressToTokenToData[msg.sender][tokenAddress]\\n            .tokenBalance += amount;\\n\\n        allTokens.transferFrom(msg.sender, address(this), amount);\\n\\n        emit SaveToken(\\n            tokenAddress,\\n            userAddressToTokenToData[msg.sender][tokenAddress].saveDuration,\\n            duration,\\n            userAddressToTokenToData[msg.sender][tokenAddress].tokenBalance\\n        );\\n    }\\n\\n    function saveTelos(uint256 duration) external payable {\\n        if (msg.value == 0) revert INSUFFICIENT_FUNDS();\\n        userAddressToUserData[msg.sender].telosBalance += msg.value;\\n        userAddressToUserData[msg.sender].telosDuration = duration;\\n        userAddressToUserData[msg.sender].timeSaved = block.timestamp;\\n\\n        emit SaveTelos(\\n            duration,\\n            block.timestamp,\\n            userAddressToUserData[msg.sender].telosBalance\\n        );\\n    }\\n\\n    function setGoal(uint256 goalAmount) external {\\n        userAddressToUserData[msg.sender].Goal = goalAmount;\\n\\n        emit Goal(goalAmount);\\n    }\\n\\n    function createGroup(\\n        uint256 _duration,\\n        uint256 _targetAmount,\\n        GroupVisibility _visibility,\\n        string calldata _title,\\n        string calldata _description,\\n        uint _category\\n    ) external {\\n        groupCount++;\\n        _duration = (_duration * 1 days) + block.timestamp;\\n\\n        groupById[groupCount] = Group(\\n            groupCount,\\n            _duration,\\n            _targetAmount,\\n            _visibility,\\n            _title,\\n            _description,\\n            _category,\\n            new address[](0),\\n            msg.sender,\\n            block.timestamp\\n        );\\n\\n        User storage groupOwner = userAddressToUserData[msg.sender];\\n        groupOwner.groups.push(groupCount);\\n\\n        allGroups.push(\\n            Group(\\n                groupCount,\\n                _duration,\\n                _targetAmount,\\n                _visibility,\\n                _title,\\n                _description,\\n                _category,\\n                new address[](0),\\n                msg.sender,\\n                block.timestamp\\n            )\\n        );\\n\\n        emit GroupCreated(\\n            Group(\\n                groupCount,\\n                _duration,\\n                _targetAmount,\\n                _visibility,\\n                _title,\\n                _description,\\n                _category,\\n                new address[](0),\\n                msg.sender,\\n                block.timestamp\\n            )\\n        );\\n    }\\n\\n    function editGroup(uint256 id, GroupVisibility _visibility) external {\\n        Group storage groupToBeEdited = groupById[id];\\n        groupToBeEdited.visibility = _visibility;\\n        allGroups[id - 1].visibility = _visibility;\\n\\n        emit GroupVisibilityStatus(id, _visibility);\\n    }\\n\\n    function addToCircle(address circleAddress) external {\\n        User storage addingToCircle = userAddressToUserData[msg.sender];\\n        addingToCircle.circle.push(circleAddress);\\n        bool added = true;\\n\\n        emit CircleAdded(added);\\n    }\\n\\n    function joinGroup(uint id) external {\\n        bool verify = belongToGroup(id);\\n        if (verify) revert USER_EXISTS();\\n        User storage UpdatingUserData = userAddressToUserData[msg.sender];\\n        Group storage addingUserToGroup = groupById[id];\\n\\n        if (addingUserToGroup.visibility == GroupVisibility.PUBLIC) {\\n            UpdatingUserData.groups.push(id);\\n            addingUserToGroup.groupMembers.push(msg.sender);\\n        } else {\\n            address creatorAddress = addingUserToGroup.creator;\\n            address[] memory membersOfCircle = userAddressToUserData[\\n                creatorAddress\\n            ].circle;\\n            bool foundCircleMember = false;\\n            for (uint i = 0; i < membersOfCircle.length; i++) {\\n                if (msg.sender == membersOfCircle[i]) {\\n                    foundCircleMember = true;\\n                    break;\\n                }\\n            }\\n            if (foundCircleMember) {\\n                UpdatingUserData.groups.push(id);\\n                addingUserToGroup.groupMembers.push(msg.sender);\\n            } else revert NOT_MEMBER();\\n        }\\n\\n        emit GroupJoined(addingUserToGroup);\\n    }\\n\\n    function leaveGroup(uint id) external {\\n        bool verify = belongToGroup(id);\\n        if (!verify) revert NOT_MEMBER();\\n        uint256[] storage updatingUserData = userAddressToUserData[msg.sender]\\n            .groups;\\n        address[] storage removeUser = groupById[id].groupMembers;\\n        for (uint i = 0; i < updatingUserData.length; i++) {\\n            if (updatingUserData[i] == id) {\\n                delete updatingUserData[i];\\n                break;\\n            }\\n        }\\n        for (uint i = 0; i < removeUser.length; i++) {\\n            if (removeUser[i] == msg.sender) {\\n                delete removeUser[i];\\n                break;\\n            }\\n        }\\n\\n        emit LeftGroup(groupById[id]);\\n    }\\n\\n    function withdrawTelos(uint amount) external {\\n        // require time and calc charge\\n        uint balance = userAddressToUserData[msg.sender].telosBalance;\\n        if (amount > balance) revert INSUFFICIENT_FUNDS();\\n        unchecked {\\n            userAddressToUserData[msg.sender].telosBalance -= amount;\\n        }\\n        (bool success, ) = msg.sender.call{value: amount}(\\\"\\\");\\n        if (!success) revert FAILED();\\n\\n        emit TelosWithdrawn(amount);\\n    }\\n\\n    function withdrawTokens(address tokenAddress, uint amount) external {\\n        uint balance = userAddressToTokenToData[msg.sender][tokenAddress]\\n            .tokenBalance;\\n        if (amount > balance) revert INSUFFICIENT_FUNDS();\\n        unchecked {\\n            userAddressToTokenToData[msg.sender][tokenAddress]\\n                .tokenBalance -= amount;\\n        }\\n        IERC20 token = IERC20(tokenAddress);\\n        token.transfer(msg.sender, amount);\\n\\n        emit TokensWithdrawn(amount);\\n    }\\n\\n    function withdrawTokenRewards(\\n        address tokenAddress,\\n        uint256 amount\\n    ) external {\\n        if (amount >= userAddressToUserData[msg.sender].rewardsEarned)\\n            revert INSUFFICIENT_FUNDS();\\n        unchecked {\\n            userAddressToUserData[msg.sender].rewardsEarned -= amount;\\n            userAddressToTokenToData[msg.sender][tokenAddress]\\n                .tokenBalance -= amount;\\n        }\\n\\n        minter.mint(msg.sender, amount);\\n\\n        emit FISWithdrawn(amount);\\n    }\\n\\n    function createInvestment(\\n        string memory _title,\\n        string memory _description,\\n        uint256 _depositPrice,\\n        uint256 _duration,\\n        uint256 _percentInterest\\n    ) external onlyOwner {\\n        if (_percentInterest >= 10 && _percentInterest <= 20) {\\n            investmentCount++;\\n            idToInvestment[investmentCount] = Investment(\\n                investmentCount,\\n                _title,\\n                _description,\\n                _depositPrice,\\n                _duration,\\n                _percentInterest,\\n                new address[](0),\\n                true,\\n                Status.IN_PROGRESS,\\n                0\\n            );\\n            allInvestments.push(\\n                Investment(\\n                    investmentCount,\\n                    _title,\\n                    _description,\\n                    _depositPrice,\\n                    _duration,\\n                    _percentInterest,\\n                    new address[](0),\\n                    true,\\n                    Status.IN_PROGRESS,\\n                    0\\n                )\\n            );\\n        } else revert NOT_IN_PERCENT_RANGE();\\n    }\\n\\n    // Customer joins investment\\n    function invest(uint id) external {\\n        User storage user = userAddressToUserData[msg.sender];\\n        uint256[] memory userInvestmentsIds = user.investments;\\n        for (uint i = 0; i < userInvestmentsIds.length; i++) {\\n            bool verify = false;\\n            if (userInvestmentsIds[i] == id) verify = true;\\n            if (verify) revert USER_EXISTS();\\n        }\\n        if (!(idToInvestment[id].open)) revert NOT_AVAILABLE();\\n        if (user.telosBalance >= idToInvestment[id].depositPrice)\\n            revert INSUFFICIENT_FUNDS();\\n\\n        user.investments.push(id);\\n        idToInvestment[id].investmentParticipants.push(msg.sender);\\n\\n        // add to investmentWallet\\n        investmentWallet += idToInvestment[id].depositPrice;\\n\\n        // transfer collateral\\n        user.telosBalance -= idToInvestment[id].depositPrice;\\n        user.investmentCollateral += idToInvestment[id].depositPrice;\\n    }\\n\\n    // Admin disburses profit #onlyOwner\\n    function disburseProfit(uint256 id) external payable {\\n        Investment storage investment = idToInvestment[id];\\n        address[] memory owners = investment.investmentParticipants;\\n        if (investment.open) revert NOT_AVAILABLE();\\n        if (investment.status == Status.IN_PROGRESS) revert IN_PROGRESS();\\n        uint256 unitProfit = calcDisburseProfit(\\n            investment.depositPrice,\\n            investment.percentInterest\\n        );\\n        uint256 totalProfit = unitProfit * owners.length;\\n\\n        for (uint i = 0; i < owners.length; i++) {\\n            User storage user = userAddressToUserData[owners[i]];\\n            if (investment.status == Status.SUCCESS) {\\n                if (msg.value != totalProfit) revert INSUFFICIENT_FUNDS();\\n                user.telosBalance += unitProfit;\\n                user.investmentCollateral -= investment.depositPrice;\\n            }\\n            if (investment.status == Status.FAILED) {\\n                user.rewardsEarned += user.investmentCollateral;\\n                user.investmentCollateral -= investment.depositPrice;\\n            }\\n        }\\n    }\\n\\n    // change status of investment and open or not of the investment\\n    function changeInvestmentStatus(\\n        uint256 id,\\n        bool _open,\\n        Status _status\\n    ) external onlyOwner {\\n        Investment storage investment = idToInvestment[id];\\n        investment.open = _open;\\n        investment.status = _status;\\n    }\\n\\n    function withdrawForInvestment(uint amount) external onlyOwner {\\n        if (investmentWallet >= amount) revert INSUFFICIENT_FUNDS();\\n        unchecked {\\n            investmentWallet -= amount;\\n        }\\n        (bool success, ) = msg.sender.call{value: amount}(\\\"\\\");\\n        if (!success) revert FAILED();\\n\\n        emit InvestmentWithdrawn(amount);\\n    }\\n\\n    // Methods\\n    function belongToGroup(uint id) internal view returns (bool) {\\n        uint[] memory userGroups = userAddressToUserData[msg.sender].groups;\\n        bool verify = false;\\n        for (uint i = 0; i < userGroups.length; i++) {\\n            if (id == userGroups[i]) {\\n                verify = true;\\n                break;\\n            }\\n        }\\n        return verify;\\n    }\\n\\n    // Getter functions\\n    function circleMembers() external view returns (address[] memory) {\\n        return userAddressToUserData[msg.sender].circle;\\n    }\\n\\n    function getGroupById(uint id) external view returns (Group memory) {\\n        return groupById[id];\\n    }\\n\\n    function getAllGroups() external view returns (Group[] memory) {\\n        return allGroups;\\n    }\\n\\n    function getUser() external view returns (User memory) {\\n        return userAddressToUserData[msg.sender];\\n    }\\n\\n    function getUserTokensData() external returns (TokenSavingsData[] memory) {\\n        User storage userData = userAddressToUserData[msg.sender];\\n        address[] memory userTokensAddresses = userData.tokens;\\n\\n        TokenSavingsData[] memory listOfUserTokensData = new TokenSavingsData[](\\n            userTokensAddresses.length\\n        );\\n\\n        for (uint i = 0; i < userTokensAddresses.length; i++) {\\n            TokenSavingsData storage tokenData = userAddressToTokenToData[\\n                msg.sender\\n            ][userTokensAddresses[i]];\\n\\n            // update rewards\\n            uint256 secondsPassed = (block.timestamp - tokenData.timeSaved);\\n            if (secondsPassed >= 86400) {\\n                uint256 newRewards = (tokenData.tokenBalance *\\n                    secondsPassed *\\n                    (calcRewardsPerSeconds(percentageRewardPerDay) * rate)) /\\n                    1e18;\\n                userData.rewardsEarned += newRewards;\\n                tokenData.timeSaved = block.timestamp;\\n                tokenData.tokenRewards += newRewards;\\n            }\\n\\n            listOfUserTokensData[i] = tokenData;\\n        }\\n        return listOfUserTokensData;\\n    }\\n\\n    // function getBalanceOfContract(address tokenAddress) external view returns (uint256) {\\n    //     IERC20 balanceOfTokenInContract = IERC20(tokenAddress);\\n    //     return balanceOfTokenInContract.balanceOf(address(this));\\n    // }\\n\\n    function changePerentageRewardPerDay(uint256 _tokenRewards) external {\\n        percentageRewardPerDay = _tokenRewards;\\n    }\\n\\n    function calcRewardsPerSeconds(\\n        uint dailyRate\\n    ) internal pure returns (uint256) {\\n        return (dailyRate * 1e16) / (24 * 60 * 60);\\n    }\\n\\n    function getAllInvestments() external view returns (Investment[] memory) {\\n        return allInvestments;\\n    }\\n\\n    function getInvestmentById(\\n        uint id\\n    ) external view returns (Investment memory) {\\n        return idToInvestment[id];\\n    }\\n\\n    function getAllUserInvestments()\\n        external\\n        view\\n        returns (Investment[] memory)\\n    {\\n        uint256[] memory allUserInvestmentsIds = userAddressToUserData[\\n            msg.sender\\n        ].investments;\\n        Investment[] memory allUserInvestments = new Investment[](\\n            allUserInvestmentsIds.length\\n        );\\n        for (uint i = 0; i < allUserInvestmentsIds.length; i++) {\\n            allUserInvestments[i] = idToInvestment[allUserInvestmentsIds[i]];\\n        }\\n\\n        return allUserInvestments;\\n    }\\n\\n    function getInvestmentWallet() external view returns (uint256) {\\n        return investmentWallet;\\n    }\\n\\n    function calcDisburseProfit(\\n        uint256 depositPrice,\\n        uint256 percentInterest\\n    ) internal pure returns (uint256) {\\n        uint256 totalProfit = depositPrice + (percentInterest * depositPrice);\\n        return totalProfit;\\n    }\\n}\\n\",\"keccak256\":\"0xa0b5b8f5ef21aa64ff0d883d60086fb320b95840455da87b616f8a7a36046a22\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a0604052600160025560026003553480156200001b57600080fd5b506040516200646438038062006464833981810160405281019062000041919062000127565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505062000159565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000ef82620000c2565b9050919050565b6200010181620000e2565b81146200010d57600080fd5b50565b6000815190506200012181620000f6565b92915050565b60006020828403121562000140576200013f620000bd565b5b6000620001508482850162000110565b91505092915050565b6080516162e162000183600039600081816107da015281816121f7015261387101526162e16000f3fe6080604052600436106101815760003560e01c8063615b8af7116100d1578063b17323521161008a578063e1045c4011610064578063e1045c4014610535578063eed02e4b1461055e578063f4dbd50814610587578063f55c5321146105a357610181565b8063b1732352146104a4578063b5bfcc3a146104cd578063d6c48c7f146104f857610181565b8063615b8af7146103925780636cc29ea0146103bb578063832880e7146103f85780638d05a763146104235780638d9ad08e1461044e578063a3adcb8f1461047957610181565b806337a85c711161013e578063435d7c1011610118578063435d7c10146102fb5780634b29c4481461031757806355f860c0146103405780635e6690951461036957610181565b806337a85c711461027e578063386e2fc3146102a757806340931cbb146102d257610181565b806306b091f9146101865780630f576665146101af57806316c4998b146101d857806321cd3cae146102015780632afcf4801461022c57806333471df514610255575b600080fd5b34801561019257600080fd5b506101ad60048036038101906101a89190614714565b6105cc565b005b3480156101bb57600080fd5b506101d660048036038101906101d19190614754565b6107d8565b005b3480156101e457600080fd5b506101ff60048036038101906101fa9190614754565b610986565b005b34801561020d57600080fd5b50610216610b36565b6040516102239190614aff565b60405180910390f35b34801561023857600080fd5b50610253600480360381019061024e9190614754565b610e0b565b005b34801561026157600080fd5b5061027c60048036038101906102779190614754565b61110b565b005b34801561028a57600080fd5b506102a560048036038101906102a09190614b21565b611343565b005b3480156102b357600080fd5b506102bc61142d565b6040516102c99190614c65565b60405180910390f35b3480156102de57600080fd5b506102f960048036038101906102f49190614d11565b61176d565b005b61031560048036038101906103109190614754565b611e40565b005b34801561032357600080fd5b5061033e60048036038101906103399190614754565b612174565b005b34801561034c57600080fd5b5061036760048036038101906103629190614e3d565b6121f5565b005b34801561037557600080fd5b50610390600480360381019061038b9190614714565b6122df565b005b34801561039e57600080fd5b506103b960048036038101906103b49190614754565b612501565b005b3480156103c757600080fd5b506103e260048036038101906103dd9190614754565b61250b565b6040516103ef9190614f78565b60405180910390f35b34801561040457600080fd5b5061040d6127ae565b60405161041a919061514d565b60405180910390f35b34801561042f57600080fd5b50610438612a64565b60405161044591906151de565b60405180910390f35b34801561045a57600080fd5b50610463612b32565b6040516104709190615401565b60405180910390f35b34801561048557600080fd5b5061048e612dcc565b60405161049b9190615401565b60405180910390f35b3480156104b057600080fd5b506104cb60048036038101906104c69190615423565b613175565b005b3480156104d957600080fd5b506104e26135fd565b6040516104ef9190615485565b60405180910390f35b34801561050457600080fd5b5061051f600480360381019061051a9190614754565b613607565b60405161052c9190615588565b60405180910390f35b34801561054157600080fd5b5061055c600480360381019061055791906156da565b61386f565b005b34801561056a57600080fd5b5061058560048036038101906105809190614754565b613c90565b005b6105a1600480360381019061059c9190614754565b614079565b005b3480156105af57600080fd5b506105ca60048036038101906105c5919061578d565b61421a565b005b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015490508082111561068a576040517fe793143800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000828254039250508190555060008390508073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b81526004016107579291906157dc565b6020604051808303816000875af1158015610776573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079a919061581a565b507f9c6393f251205f9e03559951cab4c9ae71767b6174f77944a5b0c2fa51fbda9f836040516107ca9190615485565b60405180910390a150505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff160361085d576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060055410610898576040517fe793143800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060056000828254039250508190555060003373ffffffffffffffffffffffffffffffffffffffff16826040516108ce90615878565b60006040518083038185875af1925050503d806000811461090b576040519150601f19603f3d011682016040523d82523d6000602084013e610910565b606091505b505090508061094b576040517f3969307d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f87a9be6f8514f2b4bd9a7ce90293c355391c84f006fae1f7453b6b0570e8fc3f8260405161097a9190615485565b60405180910390a15050565b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154905080821115610a07576040517fe793143800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000828254039250508190555060003373ffffffffffffffffffffffffffffffffffffffff1683604051610a7d90615878565b60006040518083038185875af1925050503d8060008114610aba576040519150601f19603f3d011682016040523d82523d6000602084013e610abf565b606091505b5050905080610afa576040517f3969307d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f725f63f7df294938d2e09b5b1f09ffcdb5f881ad6629b9e75fc3626f57d2e5fc83604051610b299190615485565b60405180910390a1505050565b6060600b805480602002602001604051908101604052809291908181526020016000905b82821015610e0257838290600052602060002090600a0201604051806101400160405290816000820154815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff166001811115610bc157610bc06147bc565b5b6001811115610bd357610bd26147bc565b5b8152602001600482018054610be7906158bc565b80601f0160208091040260200160405190810160405280929190818152602001828054610c13906158bc565b8015610c605780601f10610c3557610100808354040283529160200191610c60565b820191906000526020600020905b815481529060010190602001808311610c4357829003601f168201915b50505050508152602001600582018054610c79906158bc565b80601f0160208091040260200160405190810160405280929190818152602001828054610ca5906158bc565b8015610cf25780601f10610cc757610100808354040283529160200191610cf2565b820191906000526020600020905b815481529060010190602001808311610cd557829003601f168201915b505050505081526020016006820154815260200160078201805480602002602001604051908101604052809291908181526020018280548015610d8a57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610d40575b505050505081526020016008820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160098201548152505081526020019060010190610b5a565b50505050905090565b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600081600a01805480602002602001604051908101604052809291908181526020018280548015610e9e57602002820191906000526020600020905b815481526020019060010190808311610e8a575b5050505050905060005b8151811015610f2557600084838381518110610ec757610ec66158ed565b5b602002602001015103610ed957600190505b8015610f11576040517f74c16f6400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b508080610f1d9061594b565b915050610ea8565b50600a600084815260200190815260200160002060070160009054906101000a900460ff16610f80576040517fe5313df000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600a600084815260200190815260200160002060030154826001015410610fd3576040517fe793143800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81600a01839080600181540180825580915050600190039060005260206000200160009091909190915055600a6000848152602001908152602001600020600601339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600a6000848152602001908152602001600020600301546005600082825461109d9190615993565b92505081905550600a6000848152602001908152602001600020600301548260010160008282546110ce91906159c7565b92505081905550600a6000848152602001908152602001600020600301548260090160008282546110ff9190615993565b92505081905550505050565b6000611116826142f3565b90508061114f576040517fb9034a7a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206006019050600060066000858152602001908152602001600020600701905060005b828054905081101561121b57848382815481106111d2576111d16158ed565b5b906000526020600020015403611208578281815481106111f5576111f46158ed565b5b906000526020600020016000905561121b565b80806112139061594b565b9150506111b2565b5060005b81805490508110156112f3573373ffffffffffffffffffffffffffffffffffffffff16828281548110611255576112546158ed565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036112e0578181815481106112ae576112ad6158ed565b5b9060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556112f3565b80806112eb9061594b565b91505061121f565b507fd0e91b82e81664b2f64467c1c586eb5ab5d45ec4bae333aa37435cedc46eeb95600660008681526020019081526020016000206040516113359190615cfd565b60405180910390a150505050565b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905080600701829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600190507f20fd5cdbf6d6073eef285d26843b7a19f442bd5304e98758a58f144a8b1db9b5816040516114209190615d2e565b60405180910390a1505050565b60606000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000816004018054806020026020016040519081016040528092919081815260200182805480156114f857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116114ae575b505050505090506000815167ffffffffffffffff81111561151c5761151b6155af565b5b60405190808252806020026020018201604052801561155557816020015b61154261442e565b81526020019060019003908161153a5790505b50905060005b8251811015611763576000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008584815181106115ba576115b96158ed565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600081600301544261161091906159c7565b90506201518081106116a6576000670de0b6b3a76400006002546116356003546143de565b61163f9190615d49565b83856001015461164f9190615d49565b6116599190615d49565b6116639190615dba565b9050808760050160008282546116799190615993565b925050819055504283600301819055508083600401600082825461169d9190615993565b92505081905550505b816040518060a00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815260200160038201548152602001600482015481525050848481518110611743576117426158ed565b5b60200260200101819052505050808061175b9061594b565b91505061155b565b5080935050505090565b60008081548092919061177f9061594b565b91905055504262015180896117949190615d49565b61179e9190615993565b975060405180610140016040528060005481526020018981526020018881526020018760018111156117d3576117d26147bc565b5b815260200186868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050815260200184848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508152602001828152602001600067ffffffffffffffff81111561188d5761188c6155af565b5b6040519080825280602002602001820160405280156118bb5781602001602082028036833780820191505090505b5081526020013373ffffffffffffffffffffffffffffffffffffffff16815260200142815250600660008054815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548160ff0219169083600181111561193e5761193d6147bc565b5b021790555060808201518160040190816119589190615f82565b5060a082015181600501908161196e9190615f82565b5060c0820151816006015560e0820151816007019080519060200190611995929190614473565b506101008201518160080160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061012082015181600901559050506000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050806006016000549080600181540180825580915050600190039060005260206000200160009091909190915055600b60405180610140016040528060005481526020018b81526020018a8152602001896001811115611a9157611a906147bc565b5b815260200188888080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050815260200186868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508152602001848152602001600067ffffffffffffffff811115611b4b57611b4a6155af565b5b604051908082528060200260200182016040528015611b795781602001602082028036833780820191505090505b5081526020013373ffffffffffffffffffffffffffffffffffffffff1681526020014281525090806001815401808255809150506001900390600052602060002090600a020160009091909190915060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548160ff02191690836001811115611c1157611c106147bc565b5b02179055506080820151816004019081611c2b9190615f82565b5060a0820151816005019081611c419190615f82565b5060c0820151816006015560e0820151816007019080519060200190611c68929190614473565b506101008201518160080160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610120820151816009015550507f5dee5e611798aa174dc2377aab8d1706cd9b19ebab3c8ab8c97fbffe286f2fb760405180610140016040528060005481526020018b81526020018a8152602001896001811115611d1257611d116147bc565b5b815260200188888080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050815260200186868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508152602001848152602001600067ffffffffffffffff811115611dcc57611dcb6155af565b5b604051908082528060200260200182016040528015611dfa5781602001602082028036833780820191505090505b5081526020013373ffffffffffffffffffffffffffffffffffffffff16815260200142815250604051611e2d9190614f78565b60405180910390a1505050505050505050565b6000600a60008381526020019081526020016000209050600081600601805480602002602001604051908101604052809291908181526020018280548015611edd57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611e93575b505050505090508160070160009054906101000a900460ff1615611f2d576040517fe5313df000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006002811115611f4157611f406147bc565b5b8260070160019054906101000a900460ff166002811115611f6557611f646147bc565b5b03611f9c576040517f600f150c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611fb083600301548460050154614408565b90506000825182611fc19190615d49565b905060005b835181101561216c57600060086000868481518110611fe857611fe76158ed565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600160028111156120405761203f6147bc565b5b8660070160019054906101000a900460ff166002811115612064576120636147bc565b5b036120dd578234146120a2576040517fe793143800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b838160010160008282546120b69190615993565b9250508190555085600301548160090160008282546120d591906159c7565b925050819055505b6002808111156120f0576120ef6147bc565b5b8660070160019054906101000a900460ff166002811115612114576121136147bc565b5b036121585780600901548160050160008282546121319190615993565b92505081905550856003015481600901600082825461215091906159c7565b925050819055505b5080806121649061594b565b915050611fc6565b505050505050565b80600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600801819055507ffb9a913f54617632549c7e1ece79ea1a54c1d56d517f2dff464f0a3d82634df7816040516121ea9190615485565b60405180910390a150565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff160361227a576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600a60008581526020019081526020016000209050828160070160006101000a81548160ff021916908315150217905550818160070160016101000a81548160ff021916908360028111156122d4576122d36147bc565b5b021790555050505050565b600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050154811061235a576040517fe793143800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206005016000828254039250508190555080600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008282540392505081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933836040518363ffffffff1660e01b81526004016124949291906157dc565b600060405180830381600087803b1580156124ae57600080fd5b505af11580156124c2573d6000803e3d6000fd5b505050507f7b170314096270fcb731b4f137213245a2d7d6bd865cf3b2f1ef48dbda28fd81816040516124f59190615485565b60405180910390a15050565b8060038190555050565b6125136144fd565b60066000838152602001908152602001600020604051806101400160405290816000820154815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff166001811115612575576125746147bc565b5b6001811115612587576125866147bc565b5b815260200160048201805461259b906158bc565b80601f01602080910402602001604051908101604052809291908181526020018280546125c7906158bc565b80156126145780601f106125e957610100808354040283529160200191612614565b820191906000526020600020905b8154815290600101906020018083116125f757829003601f168201915b5050505050815260200160058201805461262d906158bc565b80601f0160208091040260200160405190810160405280929190818152602001828054612659906158bc565b80156126a65780601f1061267b576101008083540402835291602001916126a6565b820191906000526020600020905b81548152906001019060200180831161268957829003601f168201915b50505050508152602001600682015481526020016007820180548060200260200160405190810160405280929190818152602001828054801561273e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116126f4575b505050505081526020016008820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016009820154815250509050919050565b6127b6614578565b600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806101600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815260200160038201548152602001600482018054806020026020016040519081016040528092919081815260200182805480156128fa57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116128b0575b50505050508152602001600582015481526020016006820180548060200260200160405190810160405280929190818152602001828054801561295c57602002820191906000526020600020905b815481526020019060010190808311612948575b50505050508152602001600782018054806020026020016040519081016040528092919081815260200182805480156129ea57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116129a0575b505050505081526020016008820154815260200160098201548152602001600a8201805480602002602001604051908101604052809291908181526020018280548015612a5657602002820191906000526020600020905b815481526020019060010190808311612a42575b505050505081525050905090565b6060600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600701805480602002602001604051908101604052809291908181526020018280548015612b2857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311612ade575b5050505050905090565b6060600c805480602002602001604051908101604052809291908181526020016000905b82821015612dc357838290600052602060002090600902016040518061014001604052908160008201548152602001600182018054612b94906158bc565b80601f0160208091040260200160405190810160405280929190818152602001828054612bc0906158bc565b8015612c0d5780601f10612be257610100808354040283529160200191612c0d565b820191906000526020600020905b815481529060010190602001808311612bf057829003601f168201915b50505050508152602001600282018054612c26906158bc565b80601f0160208091040260200160405190810160405280929190818152602001828054612c52906158bc565b8015612c9f5780601f10612c7457610100808354040283529160200191612c9f565b820191906000526020600020905b815481529060010190602001808311612c8257829003601f168201915b5050505050815260200160038201548152602001600482015481526020016005820154815260200160068201805480602002602001604051908101604052809291908181526020018280548015612d4b57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311612d01575b505050505081526020016007820160009054906101000a900460ff161515151581526020016007820160019054906101000a900460ff166002811115612d9457612d936147bc565b5b6002811115612da657612da56147bc565b5b815260200160088201548152505081526020019060010190612b56565b50505050905090565b60606000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600a01805480602002602001604051908101604052809291908181526020018280548015612e5c57602002820191906000526020600020905b815481526020019060010190808311612e48575b505050505090506000815167ffffffffffffffff811115612e8057612e7f6155af565b5b604051908082528060200260200182016040528015612eb957816020015b612ea66145e8565b815260200190600190039081612e9e5790505b50905060005b825181101561316c57600a6000848381518110612edf57612ede6158ed565b5b602002602001015181526020019081526020016000206040518061014001604052908160008201548152602001600182018054612f1b906158bc565b80601f0160208091040260200160405190810160405280929190818152602001828054612f47906158bc565b8015612f945780601f10612f6957610100808354040283529160200191612f94565b820191906000526020600020905b815481529060010190602001808311612f7757829003601f168201915b50505050508152602001600282018054612fad906158bc565b80601f0160208091040260200160405190810160405280929190818152602001828054612fd9906158bc565b80156130265780601f10612ffb57610100808354040283529160200191613026565b820191906000526020600020905b81548152906001019060200180831161300957829003601f168201915b50505050508152602001600382015481526020016004820154815260200160058201548152602001600682018054806020026020016040519081016040528092919081815260200182805480156130d257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311613088575b505050505081526020016007820160009054906101000a900460ff161515151581526020016007820160019054906101000a900460ff16600281111561311b5761311a6147bc565b5b600281111561312d5761312c6147bc565b5b815260200160088201548152505082828151811061314e5761314d6158ed565b5b602002602001018190525080806131649061594b565b915050612ebf565b50809250505090565b600082036131af576040517fe793143800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600083905060008173ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016131f1929190616054565b602060405180830381865afa15801561320e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132329190616092565b905083811061326d576040517f8186952400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b620151808361327c9190615d49565b426132879190615993565b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201819055506000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003018190555083600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600082825461341e9190615993565b925050819055508173ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b8152600401613462939291906160bf565b6020604051808303816000875af1158015613481573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906134a5919061581a565b508473ffffffffffffffffffffffffffffffffffffffff167f8a7a6da1d572d2a9793e0b6903910e6c69c42cb8e00d9e982525af036342a6dc600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015485600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546040516135ee939291906160f6565b60405180910390a25050505050565b6000600554905090565b61360f6145e8565b600a60008381526020019081526020016000206040518061014001604052908160008201548152602001600182018054613648906158bc565b80601f0160208091040260200160405190810160405280929190818152602001828054613674906158bc565b80156136c15780601f10613696576101008083540402835291602001916136c1565b820191906000526020600020905b8154815290600101906020018083116136a457829003601f168201915b505050505081526020016002820180546136da906158bc565b80601f0160208091040260200160405190810160405280929190818152602001828054613706906158bc565b80156137535780601f1061372857610100808354040283529160200191613753565b820191906000526020600020905b81548152906001019060200180831161373657829003601f168201915b50505050508152602001600382015481526020016004820154815260200160058201548152602001600682018054806020026020016040519081016040528092919081815260200182805480156137ff57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116137b5575b505050505081526020016007820160009054906101000a900460ff161515151581526020016007820160019054906101000a900460ff166002811115613848576138476147bc565b5b600281111561385a576138596147bc565b5b81526020016008820154815250509050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16036138f4576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600a8110158015613906575060148111155b15613c57576004600081548092919061391e9061594b565b91905055506040518061014001604052806004548152602001868152602001858152602001848152602001838152602001828152602001600067ffffffffffffffff8111156139705761396f6155af565b5b60405190808252806020026020018201604052801561399e5781602001602082028036833780820191505090505b508152602001600115158152602001600060028111156139c1576139c06147bc565b5b81526020016000815250600a600060045481526020019081526020016000206000820151816000015560208201518160010190816139ff9190615f82565b506040820151816002019081613a159190615f82565b50606082015181600301556080820151816004015560a0820151816005015560c0820151816006019080519060200190613a50929190614473565b5060e08201518160070160006101000a81548160ff0219169083151502179055506101008201518160070160016101000a81548160ff02191690836002811115613a9d57613a9c6147bc565b5b02179055506101208201518160080155905050600c6040518061014001604052806004548152602001878152602001868152602001858152602001848152602001838152602001600067ffffffffffffffff811115613aff57613afe6155af565b5b604051908082528060200260200182016040528015613b2d5781602001602082028036833780820191505090505b50815260200160011515815260200160006002811115613b5057613b4f6147bc565b5b815260200160008152509080600181540180825580915050600190039060005260206000209060090201600090919091909150600082015181600001556020820151816001019081613ba29190615f82565b506040820151816002019081613bb89190615f82565b50606082015181600301556080820151816004015560a0820151816005015560c0820151816006019080519060200190613bf3929190614473565b5060e08201518160070160006101000a81548160ff0219169083151502179055506101008201518160070160016101000a81548160ff02191690836002811115613c4057613c3f6147bc565b5b021790555061012082015181600801555050613c89565b6040517f5962b58700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050505050565b6000613c9b826142f3565b90508015613cd5576040517f74c16f6400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000600660008581526020019081526020016000209050600180811115613d4257613d416147bc565b5b8160030160009054906101000a900460ff166001811115613d6657613d656147bc565b5b03613e00578160060184908060018154018082558091505060019003906000526020600020016000909190919091505580600701339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061403c565b60008160080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600701805480602002602001604051908101604052809291908181526020018280548015613eed57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311613ea3575b505050505090506000805b8251811015613f6a57828181518110613f1457613f136158ed565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1603613f575760019150613f6a565b8080613f629061594b565b915050613ef8565b508015614006578460060187908060018154018082558091505060019003906000526020600020016000909190919091505583600701339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550614038565b6040517fb9034a7a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050505b7fe0ca612158979c237731ca444b6ddcc8f942bf790623349add2ee130ac9d4fcd8160405161406b919061625f565b60405180910390a150505050565b600034036140b3576040517fe793143800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b34600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008282546141059190615993565b9250508190555080600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555042600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055507f741129ebabac3d1d8298abf045729365e0c9139a4b99ddcffb9dbfaed2a40ef48142600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015460405161420f939291906160f6565b60405180910390a150565b6000600660008481526020019081526020016000209050818160030160006101000a81548160ff02191690836001811115614258576142576147bc565b5b021790555081600b60018561426d91906159c7565b8154811061427e5761427d6158ed565b5b90600052602060002090600a020160030160006101000a81548160ff021916908360018111156142b1576142b06147bc565b5b0217905550827f03b95dda2b061abd005b34747d048e0fc3822a7422c839c34b67d00ba35dc8ac836040516142e69190616290565b60405180910390a2505050565b600080600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060180548060200260200160405190810160405280929190818152602001828054801561438257602002820191906000526020600020905b81548152602001906001019080831161436e575b505050505090506000805b82518110156143d3578281815181106143a9576143a86158ed565b5b602002602001015185036143c057600191506143d3565b80806143cb9061594b565b91505061438d565b508092505050919050565b600062015180662386f26fc10000836143f79190615d49565b6144019190615dba565b9050919050565b60008083836144179190615d49565b846144229190615993565b90508091505092915050565b6040518060a00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001600081525090565b8280548282559060005260206000209081019282156144ec579160200282015b828111156144eb5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190614493565b5b5090506144f9919061464f565b5090565b60405180610140016040528060008152602001600081526020016000815260200160006001811115614532576145316147bc565b5b815260200160608152602001606081526020016000815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b604051806101600160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001606081526020016000815260200160608152602001606081526020016000815260200160008152602001606081525090565b6040518061014001604052806000815260200160608152602001606081526020016000815260200160008152602001600081526020016060815260200160001515815260200160006002811115614642576146416147bc565b5b8152602001600081525090565b5b80821115614668576000816000905550600101614650565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006146ab82614680565b9050919050565b6146bb816146a0565b81146146c657600080fd5b50565b6000813590506146d8816146b2565b92915050565b6000819050919050565b6146f1816146de565b81146146fc57600080fd5b50565b60008135905061470e816146e8565b92915050565b6000806040838503121561472b5761472a614676565b5b6000614739858286016146c9565b925050602061474a858286016146ff565b9150509250929050565b60006020828403121561476a57614769614676565b5b6000614778848285016146ff565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6147b6816146de565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600281106147fc576147fb6147bc565b5b50565b600081905061480d826147eb565b919050565b600061481d826147ff565b9050919050565b61482d81614812565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561486d578082015181840152602081019050614852565b60008484015250505050565b6000601f19601f8301169050919050565b600061489582614833565b61489f818561483e565b93506148af81856020860161484f565b6148b881614879565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6148f8816146a0565b82525050565b600061490a83836148ef565b60208301905092915050565b6000602082019050919050565b600061492e826148c3565b61493881856148ce565b9350614943836148df565b8060005b8381101561497457815161495b88826148fe565b975061496683614916565b925050600181019050614947565b5085935050505092915050565b60006101408301600083015161499a60008601826147ad565b5060208301516149ad60208601826147ad565b5060408301516149c060408601826147ad565b5060608301516149d36060860182614824565b50608083015184820360808601526149eb828261488a565b91505060a083015184820360a0860152614a05828261488a565b91505060c0830151614a1a60c08601826147ad565b5060e083015184820360e0860152614a328282614923565b915050610100830151614a496101008601826148ef565b50610120830151614a5e6101208601826147ad565b508091505092915050565b6000614a758383614981565b905092915050565b6000602082019050919050565b6000614a9582614781565b614a9f818561478c565b935083602082028501614ab18561479d565b8060005b85811015614aed5784840389528151614ace8582614a69565b9450614ad983614a7d565b925060208a01995050600181019050614ab5565b50829750879550505050505092915050565b60006020820190508181036000830152614b198184614a8a565b905092915050565b600060208284031215614b3757614b36614676565b5b6000614b45848285016146c9565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60a082016000820151614b9060008501826148ef565b506020820151614ba360208501826147ad565b506040820151614bb660408501826147ad565b506060820151614bc960608501826147ad565b506080820151614bdc60808501826147ad565b50505050565b6000614bee8383614b7a565b60a08301905092915050565b6000602082019050919050565b6000614c1282614b4e565b614c1c8185614b59565b9350614c2783614b6a565b8060005b83811015614c58578151614c3f8882614be2565b9750614c4a83614bfa565b925050600181019050614c2b565b5085935050505092915050565b60006020820190508181036000830152614c7f8184614c07565b905092915050565b60028110614c9457600080fd5b50565b600081359050614ca681614c87565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112614cd157614cd0614cac565b5b8235905067ffffffffffffffff811115614cee57614ced614cb1565b5b602083019150836001820283011115614d0a57614d09614cb6565b5b9250929050565b60008060008060008060008060c0898b031215614d3157614d30614676565b5b6000614d3f8b828c016146ff565b9850506020614d508b828c016146ff565b9750506040614d618b828c01614c97565b965050606089013567ffffffffffffffff811115614d8257614d8161467b565b5b614d8e8b828c01614cbb565b9550955050608089013567ffffffffffffffff811115614db157614db061467b565b5b614dbd8b828c01614cbb565b935093505060a0614dd08b828c016146ff565b9150509295985092959890939650565b60008115159050919050565b614df581614de0565b8114614e0057600080fd5b50565b600081359050614e1281614dec565b92915050565b60038110614e2557600080fd5b50565b600081359050614e3781614e18565b92915050565b600080600060608486031215614e5657614e55614676565b5b6000614e64868287016146ff565b9350506020614e7586828701614e03565b9250506040614e8686828701614e28565b9150509250925092565b600061014083016000830151614ea960008601826147ad565b506020830151614ebc60208601826147ad565b506040830151614ecf60408601826147ad565b506060830151614ee26060860182614824565b5060808301518482036080860152614efa828261488a565b91505060a083015184820360a0860152614f14828261488a565b91505060c0830151614f2960c08601826147ad565b5060e083015184820360e0860152614f418282614923565b915050610100830151614f586101008601826148ef565b50610120830151614f6d6101208601826147ad565b508091505092915050565b60006020820190508181036000830152614f928184614e90565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000614fd283836147ad565b60208301905092915050565b6000602082019050919050565b6000614ff682614f9a565b6150008185614fa5565b935061500b83614fb6565b8060005b8381101561503c5781516150238882614fc6565b975061502e83614fde565b92505060018101905061500f565b5085935050505092915050565b60006101608301600083015161506260008601826148ef565b50602083015161507560208601826147ad565b50604083015161508860408601826147ad565b50606083015161509b60608601826147ad565b50608083015184820360808601526150b38282614923565b91505060a08301516150c860a08601826147ad565b5060c083015184820360c08601526150e08282614feb565b91505060e083015184820360e08601526150fa8282614923565b9150506101008301516151116101008601826147ad565b506101208301516151266101208601826147ad565b506101408301518482036101408601526151408282614feb565b9150508091505092915050565b600060208201905081810360008301526151678184615049565b905092915050565b600082825260208201905092915050565b600061518b826148c3565b615195818561516f565b93506151a0836148df565b8060005b838110156151d15781516151b888826148fe565b97506151c383614916565b9250506001810190506151a4565b5085935050505092915050565b600060208201905081810360008301526151f88184615180565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61523581614de0565b82525050565b6003811061524c5761524b6147bc565b5b50565b600081905061525d8261523b565b919050565b600061526d8261524f565b9050919050565b61527d81615262565b82525050565b60006101408301600083015161529c60008601826147ad565b50602083015184820360208601526152b4828261488a565b915050604083015184820360408601526152ce828261488a565b91505060608301516152e360608601826147ad565b5060808301516152f660808601826147ad565b5060a083015161530960a08601826147ad565b5060c083015184820360c08601526153218282614923565b91505060e083015161533660e086018261522c565b5061010083015161534b610100860182615274565b506101208301516153606101208601826147ad565b508091505092915050565b60006153778383615283565b905092915050565b6000602082019050919050565b600061539782615200565b6153a1818561520b565b9350836020820285016153b38561521c565b8060005b858110156153ef57848403895281516153d0858261536b565b94506153db8361537f565b925060208a019950506001810190506153b7565b50829750879550505050505092915050565b6000602082019050818103600083015261541b818461538c565b905092915050565b60008060006060848603121561543c5761543b614676565b5b600061544a868287016146c9565b935050602061545b868287016146ff565b925050604061546c868287016146ff565b9150509250925092565b61547f816146de565b82525050565b600060208201905061549a6000830184615476565b92915050565b6000610140830160008301516154b960008601826147ad565b50602083015184820360208601526154d1828261488a565b915050604083015184820360408601526154eb828261488a565b915050606083015161550060608601826147ad565b50608083015161551360808601826147ad565b5060a083015161552660a08601826147ad565b5060c083015184820360c086015261553e8282614923565b91505060e083015161555360e086018261522c565b50610100830151615568610100860182615274565b5061012083015161557d6101208601826147ad565b508091505092915050565b600060208201905081810360008301526155a281846154a0565b905092915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6155e782614879565b810181811067ffffffffffffffff82111715615606576156056155af565b5b80604052505050565b600061561961466c565b905061562582826155de565b919050565b600067ffffffffffffffff821115615645576156446155af565b5b61564e82614879565b9050602081019050919050565b82818337600083830152505050565b600061567d6156788461562a565b61560f565b905082815260208101848484011115615699576156986155aa565b5b6156a484828561565b565b509392505050565b600082601f8301126156c1576156c0614cac565b5b81356156d184826020860161566a565b91505092915050565b600080600080600060a086880312156156f6576156f5614676565b5b600086013567ffffffffffffffff8111156157145761571361467b565b5b615720888289016156ac565b955050602086013567ffffffffffffffff8111156157415761574061467b565b5b61574d888289016156ac565b945050604061575e888289016146ff565b935050606061576f888289016146ff565b9250506080615780888289016146ff565b9150509295509295909350565b600080604083850312156157a4576157a3614676565b5b60006157b2858286016146ff565b92505060206157c385828601614c97565b9150509250929050565b6157d6816146a0565b82525050565b60006040820190506157f160008301856157cd565b6157fe6020830184615476565b9392505050565b60008151905061581481614dec565b92915050565b6000602082840312156158305761582f614676565b5b600061583e84828501615805565b91505092915050565b600081905092915050565b50565b6000615862600083615847565b915061586d82615852565b600082019050919050565b600061588382615855565b9150819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806158d457607f821691505b6020821081036158e7576158e661588d565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000615956826146de565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036159885761598761591c565b5b600182019050919050565b600061599e826146de565b91506159a9836146de565b92508282019050808211156159c1576159c061591c565b5b92915050565b60006159d2826146de565b91506159dd836146de565b92508282039050818111156159f5576159f461591c565b5b92915050565b60008160001c9050919050565b6000819050919050565b6000615a25615a20836159fb565b615a08565b9050919050565b600060ff82169050919050565b6000615a4c615a47836159fb565b615a2c565b9050919050565b60008190508160005260206000209050919050565b60008154615a75816158bc565b615a7f818661483e565b94506001821660008114615a9a5760018114615ab057615ae3565b60ff198316865281151560200286019350615ae3565b615ab985615a53565b60005b83811015615adb57815481890152600182019150602081019050615abc565b808801955050505b50505092915050565b600081549050919050565b60008190508160005260206000209050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000615b3f615b3a836159fb565b615b0c565b9050919050565b6000615b528254615b2c565b9050919050565b6000600182019050919050565b6000615b7182615aec565b615b7b81856148ce565b9350615b8683615af7565b8060005b83811015615bbe57615b9b82615b46565b615ba588826148fe565b9750615bb083615b59565b925050600181019050615b8a565b5085935050505092915050565b600061014083016000808401549050615be381615a12565b615bf060008701826147ad565b5060018401549050615c0181615a12565b615c0e60208701826147ad565b5060028401549050615c1f81615a12565b615c2c60408701826147ad565b5060038401549050615c3d81615a39565b615c4a6060870182614824565b50600484018583036080870152615c618382615a68565b9250506005840185830360a0870152615c7a8382615a68565b92505060068401549050615c8d81615a12565b615c9a60c08701826147ad565b506007840185830360e0870152615cb18382615b66565b92505060088401549050615cc481615b2c565b615cd26101008701826148ef565b5060098401549050615ce381615a12565b615cf16101208701826147ad565b50819250505092915050565b60006020820190508181036000830152615d178184615bcb565b905092915050565b615d2881614de0565b82525050565b6000602082019050615d436000830184615d1f565b92915050565b6000615d54826146de565b9150615d5f836146de565b9250828202615d6d816146de565b91508282048414831517615d8457615d8361591c565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000615dc5826146de565b9150615dd0836146de565b925082615de057615ddf615d8b565b5b828204905092915050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302615e387fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82615dfb565b615e428683615dfb565b95508019841693508086168417925050509392505050565b6000819050919050565b6000615e7f615e7a615e75846146de565b615e5a565b6146de565b9050919050565b6000819050919050565b615e9983615e64565b615ead615ea582615e86565b848454615e08565b825550505050565b600090565b615ec2615eb5565b615ecd818484615e90565b505050565b5b81811015615ef157615ee6600082615eba565b600181019050615ed3565b5050565b601f821115615f3657615f0781615a53565b615f1084615deb565b81016020851015615f1f578190505b615f33615f2b85615deb565b830182615ed2565b50505b505050565b600082821c905092915050565b6000615f5960001984600802615f3b565b1980831691505092915050565b6000615f728383615f48565b9150826002028217905092915050565b615f8b82614833565b67ffffffffffffffff811115615fa457615fa36155af565b5b615fae82546158bc565b615fb9828285615ef5565b600060209050601f831160018114615fec5760008415615fda578287015190505b615fe48582615f66565b86555061604c565b601f198416615ffa86615a53565b60005b8281101561602257848901518255600182019150602085019450602081019050615ffd565b8683101561603f578489015161603b601f891682615f48565b8355505b6001600288020188555050505b505050505050565b600060408201905061606960008301856157cd565b61607660208301846157cd565b9392505050565b60008151905061608c816146e8565b92915050565b6000602082840312156160a8576160a7614676565b5b60006160b68482850161607d565b91505092915050565b60006060820190506160d460008301866157cd565b6160e160208301856157cd565b6160ee6040830184615476565b949350505050565b600060608201905061610b6000830186615476565b6161186020830185615476565b6161256040830184615476565b949350505050565b60006101408301600080840154905061614581615a12565b61615260008701826147ad565b506001840154905061616381615a12565b61617060208701826147ad565b506002840154905061618181615a12565b61618e60408701826147ad565b506003840154905061619f81615a39565b6161ac6060870182614824565b506004840185830360808701526161c38382615a68565b9250506005840185830360a08701526161dc8382615a68565b925050600684015490506161ef81615a12565b6161fc60c08701826147ad565b506007840185830360e08701526162138382615b66565b9250506008840154905061622681615b2c565b6162346101008701826148ef565b506009840154905061624581615a12565b6162536101208701826147ad565b50819250505092915050565b60006020820190508181036000830152616279818461612d565b905092915050565b61628a81614812565b82525050565b60006020820190506162a56000830184616281565b9291505056fea26469706673582212206669c8d5aef48c23db6e2cc80989ceef6dd7f9658c7e383a844e5a2851816fef64736f6c63430008140033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1273,
        "contract": "contracts/FIS_Protocol.sol:FISContract",
        "label": "groupCount",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 1278,
        "contract": "contracts/FIS_Protocol.sol:FISContract",
        "label": "minter",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(MintingInterface)1253"
      },
      {
        "astId": 1281,
        "contract": "contracts/FIS_Protocol.sol:FISContract",
        "label": "rate",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 1284,
        "contract": "contracts/FIS_Protocol.sol:FISContract",
        "label": "percentageRewardPerDay",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 1286,
        "contract": "contracts/FIS_Protocol.sol:FISContract",
        "label": "investmentCount",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 1288,
        "contract": "contracts/FIS_Protocol.sol:FISContract",
        "label": "investmentWallet",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 1384,
        "contract": "contracts/FIS_Protocol.sol:FISContract",
        "label": "groupById",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_uint256,t_struct(Group)1356_storage)"
      },
      {
        "astId": 1391,
        "contract": "contracts/FIS_Protocol.sol:FISContract",
        "label": "userAddressToTokenToData",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_mapping(t_address,t_struct(TokenSavingsData)1306_storage))"
      },
      {
        "astId": 1396,
        "contract": "contracts/FIS_Protocol.sol:FISContract",
        "label": "userAddressToUserData",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_struct(User)1333_storage)"
      },
      {
        "astId": 1401,
        "contract": "contracts/FIS_Protocol.sol:FISContract",
        "label": "userInvestments",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_struct(Investment)1379_storage)"
      },
      {
        "astId": 1406,
        "contract": "contracts/FIS_Protocol.sol:FISContract",
        "label": "idToInvestment",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_uint256,t_struct(Investment)1379_storage)"
      },
      {
        "astId": 1410,
        "contract": "contracts/FIS_Protocol.sol:FISContract",
        "label": "allGroups",
        "offset": 0,
        "slot": "11",
        "type": "t_array(t_struct(Group)1356_storage)dyn_storage"
      },
      {
        "astId": 1414,
        "contract": "contracts/FIS_Protocol.sol:FISContract",
        "label": "allInvestments",
        "offset": 0,
        "slot": "12",
        "type": "t_array(t_struct(Investment)1379_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Group)1356_storage)dyn_storage": {
        "base": "t_struct(Group)1356_storage",
        "encoding": "dynamic_array",
        "label": "struct FISContract.Group[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Investment)1379_storage)dyn_storage": {
        "base": "t_struct(Investment)1379_storage",
        "encoding": "dynamic_array",
        "label": "struct FISContract.Investment[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(MintingInterface)1253": {
        "encoding": "inplace",
        "label": "contract MintingInterface",
        "numberOfBytes": "20"
      },
      "t_enum(GroupVisibility)1291": {
        "encoding": "inplace",
        "label": "enum FISContract.GroupVisibility",
        "numberOfBytes": "1"
      },
      "t_enum(Status)1295": {
        "encoding": "inplace",
        "label": "enum FISContract.Status",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_mapping(t_address,t_struct(TokenSavingsData)1306_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => struct FISContract.TokenSavingsData))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_struct(TokenSavingsData)1306_storage)"
      },
      "t_mapping(t_address,t_struct(Investment)1379_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct FISContract.Investment)",
        "numberOfBytes": "32",
        "value": "t_struct(Investment)1379_storage"
      },
      "t_mapping(t_address,t_struct(TokenSavingsData)1306_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct FISContract.TokenSavingsData)",
        "numberOfBytes": "32",
        "value": "t_struct(TokenSavingsData)1306_storage"
      },
      "t_mapping(t_address,t_struct(User)1333_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct FISContract.User)",
        "numberOfBytes": "32",
        "value": "t_struct(User)1333_storage"
      },
      "t_mapping(t_uint256,t_struct(Group)1356_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct FISContract.Group)",
        "numberOfBytes": "32",
        "value": "t_struct(Group)1356_storage"
      },
      "t_mapping(t_uint256,t_struct(Investment)1379_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct FISContract.Investment)",
        "numberOfBytes": "32",
        "value": "t_struct(Investment)1379_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Group)1356_storage": {
        "encoding": "inplace",
        "label": "struct FISContract.Group",
        "members": [
          {
            "astId": 1335,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 1337,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "duration",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 1339,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "targetAmount",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 1342,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "visibility",
            "offset": 0,
            "slot": "3",
            "type": "t_enum(GroupVisibility)1291"
          },
          {
            "astId": 1344,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "title",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage"
          },
          {
            "astId": 1346,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "description",
            "offset": 0,
            "slot": "5",
            "type": "t_string_storage"
          },
          {
            "astId": 1348,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "category",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 1351,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "groupMembers",
            "offset": 0,
            "slot": "7",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 1353,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "creator",
            "offset": 0,
            "slot": "8",
            "type": "t_address"
          },
          {
            "astId": 1355,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "timeCreated",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "320"
      },
      "t_struct(Investment)1379_storage": {
        "encoding": "inplace",
        "label": "struct FISContract.Investment",
        "members": [
          {
            "astId": 1358,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 1360,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "title",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 1362,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "description",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 1364,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "depositPrice",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 1366,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "duration",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 1368,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "percentInterest",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 1371,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "investmentParticipants",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 1373,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "open",
            "offset": 0,
            "slot": "7",
            "type": "t_bool"
          },
          {
            "astId": 1376,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "status",
            "offset": 1,
            "slot": "7",
            "type": "t_enum(Status)1295"
          },
          {
            "astId": 1378,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "totalDeposit",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "288"
      },
      "t_struct(TokenSavingsData)1306_storage": {
        "encoding": "inplace",
        "label": "struct FISContract.TokenSavingsData",
        "members": [
          {
            "astId": 1297,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "tokenAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 1299,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "tokenBalance",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 1301,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "saveDuration",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 1303,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "timeSaved",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 1305,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "tokenRewards",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_struct(User)1333_storage": {
        "encoding": "inplace",
        "label": "struct FISContract.User",
        "members": [
          {
            "astId": 1308,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "walletAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 1310,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "telosBalance",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 1312,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "telosDuration",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 1314,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "timeSaved",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 1317,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "tokens",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 1319,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "rewardsEarned",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 1322,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "groups",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_uint256)dyn_storage"
          },
          {
            "astId": 1325,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "circle",
            "offset": 0,
            "slot": "7",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 1327,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "Goal",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          },
          {
            "astId": 1329,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "investmentCollateral",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          },
          {
            "astId": 1332,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "investments",
            "offset": 0,
            "slot": "10",
            "type": "t_array(t_uint256)dyn_storage"
          }
        ],
        "numberOfBytes": "352"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}
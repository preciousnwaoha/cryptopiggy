{
  "address": "0xB39C640963C368b245BfB12215bACDad33cE25FD",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FAILED",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "INSUFFICIENT_FUNDS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NOT_APPROVED",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NOT_AVAILABLE",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NOT_IN_PERCENT_RANGE",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NOT_MEMBER",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NOT_OWNER",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "USER_EXISTS",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "circleMemberAdded",
          "type": "bool"
        }
      ],
      "name": "CircleAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "FISWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "setGoal",
          "type": "uint256"
        }
      ],
      "name": "Goal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "targetAmount",
              "type": "uint256"
            },
            {
              "internalType": "enum FISContract.GroupVisibility",
              "name": "visibility",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "category",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "groupMembers",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timeCreated",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct FISContract.Group",
          "name": "groupDetails",
          "type": "tuple"
        }
      ],
      "name": "GroupCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "targetAmount",
              "type": "uint256"
            },
            {
              "internalType": "enum FISContract.GroupVisibility",
              "name": "visibility",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "category",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "groupMembers",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timeCreated",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct FISContract.Group",
          "name": "groupDetails",
          "type": "tuple"
        }
      ],
      "name": "GroupJoined",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "enum FISContract.GroupVisibility",
          "name": "_visibility",
          "type": "uint8"
        }
      ],
      "name": "GroupVisibilityStatus",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "investmentWithdrawn",
          "type": "uint256"
        }
      ],
      "name": "InvestmentWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "targetAmount",
              "type": "uint256"
            },
            {
              "internalType": "enum FISContract.GroupVisibility",
              "name": "visibility",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "category",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "groupMembers",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timeCreated",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct FISContract.Group",
          "name": "groupDetails",
          "type": "tuple"
        }
      ],
      "name": "LeftGroup",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "telosDuration",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timeSaved",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenBalance",
          "type": "uint256"
        }
      ],
      "name": "SaveTelos",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "saveDuration",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timeSaved",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenBalance",
          "type": "uint256"
        }
      ],
      "name": "SaveToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TelosWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensWithdrawn",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "circleAddress",
          "type": "address"
        }
      ],
      "name": "addToCircle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_open",
          "type": "bool"
        },
        {
          "internalType": "enum FISContract.Status",
          "name": "_status",
          "type": "uint8"
        }
      ],
      "name": "changeInvestmentStatus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenRewards",
          "type": "uint256"
        }
      ],
      "name": "changePerentageRewardPerDay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_duration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_targetAmount",
          "type": "uint256"
        },
        {
          "internalType": "enum FISContract.GroupVisibility",
          "name": "_visibility",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "_title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_category",
          "type": "uint256"
        }
      ],
      "name": "createGroup",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_depositPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_duration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_percentInterest",
          "type": "uint256"
        }
      ],
      "name": "createInvestment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "enum FISContract.GroupVisibility",
          "name": "_visibility",
          "type": "uint8"
        }
      ],
      "name": "editGroup",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllGroups",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "targetAmount",
              "type": "uint256"
            },
            {
              "internalType": "enum FISContract.GroupVisibility",
              "name": "visibility",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "category",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "groupMembers",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timeCreated",
              "type": "uint256"
            }
          ],
          "internalType": "struct FISContract.Group[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllInvestments",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "depositPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "percentInterest",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "investmentParticipants",
              "type": "address[]"
            },
            {
              "internalType": "bool",
              "name": "open",
              "type": "bool"
            },
            {
              "internalType": "enum FISContract.Status",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "totalDeposit",
              "type": "uint256"
            }
          ],
          "internalType": "struct FISContract.Investment[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllUserInvestments",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "depositPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "percentInterest",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "investmentParticipants",
              "type": "address[]"
            },
            {
              "internalType": "bool",
              "name": "open",
              "type": "bool"
            },
            {
              "internalType": "enum FISContract.Status",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "totalDeposit",
              "type": "uint256"
            }
          ],
          "internalType": "struct FISContract.Investment[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getGroupById",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "targetAmount",
              "type": "uint256"
            },
            {
              "internalType": "enum FISContract.GroupVisibility",
              "name": "visibility",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "category",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "groupMembers",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timeCreated",
              "type": "uint256"
            }
          ],
          "internalType": "struct FISContract.Group",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getInvestmentById",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "depositPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "percentInterest",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "investmentParticipants",
              "type": "address[]"
            },
            {
              "internalType": "bool",
              "name": "open",
              "type": "bool"
            },
            {
              "internalType": "enum FISContract.Status",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "totalDeposit",
              "type": "uint256"
            }
          ],
          "internalType": "struct FISContract.Investment",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getInvestmentWallet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUser",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "walletAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "telosBalance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "telosDuration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timeSaved",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "tokens",
              "type": "address[]"
            },
            {
              "internalType": "uint256",
              "name": "rewardsEarned",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "groups",
              "type": "uint256[]"
            },
            {
              "internalType": "address[]",
              "name": "circle",
              "type": "address[]"
            },
            {
              "internalType": "uint256",
              "name": "Goal",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "investmentCollateral",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "investments",
              "type": "uint256[]"
            }
          ],
          "internalType": "struct FISContract.User",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUserTokensData",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenBalance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "saveDuration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timeSaved",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenRewards",
              "type": "uint256"
            }
          ],
          "internalType": "struct FISContract.TokenSavingsData[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "invest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "joinGroup",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "leaveGroup",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        }
      ],
      "name": "saveTelos",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        }
      ],
      "name": "saveTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "goalAmount",
          "type": "uint256"
        }
      ],
      "name": "setGoal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawForInvestment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawTelos",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawTokenRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xf2bca113adf43f5d52d5984d780003ddffb646c175c48727db08dafd3d88af4e",
  "receipt": {
    "to": null,
    "from": "0x7476deB582C24610511D16266E972DF5d2895bc7",
    "contractAddress": "0xB39C640963C368b245BfB12215bACDad33cE25FD",
    "transactionIndex": 0,
    "gasUsed": "5301180",
    "logsBloom": "0x
    "blockHash": "0x862c64b24e93edbdf86ecf99898bda6ab4164535d4780bd5f02b5b8334e58464",
    "transactionHash": "0xf2bca113adf43f5d52d5984d780003ddffb646c175c48727db08dafd3d88af4e",
    "logs": [],
    "blockNumber": 267313781,
    "cumulativeGasUsed": "5301180",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x851d61a87cdA4b31C1c5eA6389a82cE9F1a45e81"
  ],
  "numDeployments": 4,
  "solcInputHash": "c64dfbb0e7d45fd0489f74e40ffb35c8",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FAILED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INSUFFICIENT_FUNDS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_APPROVED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_AVAILABLE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_IN_PERCENT_RANGE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_MEMBER\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_OWNER\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"USER_EXISTS\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"circleMemberAdded\",\"type\":\"bool\"}],\"name\":\"CircleAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FISWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"setGoal\",\"type\":\"uint256\"}],\"name\":\"Goal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"targetAmount\",\"type\":\"uint256\"},{\"internalType\":\"enum FISContract.GroupVisibility\",\"name\":\"visibility\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"category\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"groupMembers\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timeCreated\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct FISContract.Group\",\"name\":\"groupDetails\",\"type\":\"tuple\"}],\"name\":\"GroupCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"targetAmount\",\"type\":\"uint256\"},{\"internalType\":\"enum FISContract.GroupVisibility\",\"name\":\"visibility\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"category\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"groupMembers\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timeCreated\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct FISContract.Group\",\"name\":\"groupDetails\",\"type\":\"tuple\"}],\"name\":\"GroupJoined\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum FISContract.GroupVisibility\",\"name\":\"_visibility\",\"type\":\"uint8\"}],\"name\":\"GroupVisibilityStatus\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"investmentWithdrawn\",\"type\":\"uint256\"}],\"name\":\"InvestmentWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"targetAmount\",\"type\":\"uint256\"},{\"internalType\":\"enum FISContract.GroupVisibility\",\"name\":\"visibility\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"category\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"groupMembers\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timeCreated\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct FISContract.Group\",\"name\":\"groupDetails\",\"type\":\"tuple\"}],\"name\":\"LeftGroup\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"telosDuration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timeSaved\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenBalance\",\"type\":\"uint256\"}],\"name\":\"SaveTelos\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"saveDuration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timeSaved\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenBalance\",\"type\":\"uint256\"}],\"name\":\"SaveToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TelosWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensWithdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"circleAddress\",\"type\":\"address\"}],\"name\":\"addToCircle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_open\",\"type\":\"bool\"},{\"internalType\":\"enum FISContract.Status\",\"name\":\"_status\",\"type\":\"uint8\"}],\"name\":\"changeInvestmentStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenRewards\",\"type\":\"uint256\"}],\"name\":\"changePerentageRewardPerDay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_targetAmount\",\"type\":\"uint256\"},{\"internalType\":\"enum FISContract.GroupVisibility\",\"name\":\"_visibility\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_category\",\"type\":\"uint256\"}],\"name\":\"createGroup\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_depositPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_percentInterest\",\"type\":\"uint256\"}],\"name\":\"createInvestment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"enum FISContract.GroupVisibility\",\"name\":\"_visibility\",\"type\":\"uint8\"}],\"name\":\"editGroup\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllGroups\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"targetAmount\",\"type\":\"uint256\"},{\"internalType\":\"enum FISContract.GroupVisibility\",\"name\":\"visibility\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"category\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"groupMembers\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timeCreated\",\"type\":\"uint256\"}],\"internalType\":\"struct FISContract.Group[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllInvestments\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"depositPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"percentInterest\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"investmentParticipants\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"open\",\"type\":\"bool\"},{\"internalType\":\"enum FISContract.Status\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"totalDeposit\",\"type\":\"uint256\"}],\"internalType\":\"struct FISContract.Investment[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllUserInvestments\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"depositPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"percentInterest\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"investmentParticipants\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"open\",\"type\":\"bool\"},{\"internalType\":\"enum FISContract.Status\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"totalDeposit\",\"type\":\"uint256\"}],\"internalType\":\"struct FISContract.Investment[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getGroupById\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"targetAmount\",\"type\":\"uint256\"},{\"internalType\":\"enum FISContract.GroupVisibility\",\"name\":\"visibility\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"category\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"groupMembers\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timeCreated\",\"type\":\"uint256\"}],\"internalType\":\"struct FISContract.Group\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getInvestmentById\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"depositPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"percentInterest\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"investmentParticipants\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"open\",\"type\":\"bool\"},{\"internalType\":\"enum FISContract.Status\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"totalDeposit\",\"type\":\"uint256\"}],\"internalType\":\"struct FISContract.Investment\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getInvestmentWallet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUser\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"telosBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"telosDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeSaved\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"rewardsEarned\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"groups\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"circle\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"Goal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"investmentCollateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"investments\",\"type\":\"uint256[]\"}],\"internalType\":\"struct FISContract.User\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUserTokensData\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"saveDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeSaved\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenRewards\",\"type\":\"uint256\"}],\"internalType\":\"struct FISContract.TokenSavingsData[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"invest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"joinGroup\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"leaveGroup\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"saveTelos\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"saveTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"goalAmount\",\"type\":\"uint256\"}],\"name\":\"setGoal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawForInvestment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTelos\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTokenRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FIS_Protocol.sol\":\"FISContract\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"contracts/FIS_Protocol.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.7;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface MintingInterface {\\n    function mint(address account, uint256 amount) external;\\n}\\n\\nerror NOT_APPROVED();\\nerror NOT_OWNER();\\nerror INSUFFICIENT_FUNDS();\\nerror USER_EXISTS();\\nerror NOT_MEMBER();\\nerror IN_PROGRESS();\\nerror FAILED();\\nerror NOT_IN_PERCENT_RANGE();\\nerror NOT_AVAILABLE();\\n\\ncontract FISContract {\\n    uint256 private groupCount;\\n    address private immutable i_owner;\\n    MintingInterface private minter;\\n    uint256 private rate = 1;\\n    uint256 private percentageRewardPerDay = 2;\\n    uint256 private investmentCount;\\n    uint256 private investmentWallet;\\n\\n    enum GroupVisibility {\\n        CIRCLE,\\n        PUBLIC\\n    }\\n\\n    enum Status {\\n        IN_PROGRESS,\\n        SUCCESS,\\n        FAILED\\n    }\\n\\n    struct TokenSavingsData {\\n        address tokenAddress;\\n        uint256 tokenBalance;\\n        uint256 saveDuration;\\n        uint256 timeSaved;\\n        uint256 tokenRewards;\\n    }\\n\\n    struct User {\\n        address walletAddress;\\n        uint256 telosBalance;\\n        uint256 telosDuration;\\n        uint256 timeSaved;\\n        address[] tokens;\\n        uint256 rewardsEarned;\\n        uint256[] groups;\\n        address[] circle;\\n        uint256 Goal;\\n        uint256 investmentCollateral;\\n        uint256[] investments;\\n    }\\n\\n    struct Group {\\n        uint256 id;\\n        uint256 duration;\\n        uint256 targetAmount;\\n        GroupVisibility visibility;\\n        string title;\\n        string description;\\n        uint category;\\n        address[] groupMembers;\\n        address creator;\\n        uint timeCreated;\\n    }\\n\\n    struct Investment {\\n        uint256 id;\\n        string title;\\n        string description;\\n        uint256 depositPrice;\\n        uint256 duration;\\n        uint256 percentInterest;\\n        address[] investmentParticipants;\\n        bool open;\\n        Status status;\\n        uint256 totalDeposit;\\n    }\\n\\n    mapping(uint => Group) private groupById;\\n\\n    mapping(address => mapping(address => TokenSavingsData))\\n        private userAddressToTokenToData;\\n\\n    mapping(address => User) private userAddressToUserData;\\n\\n    mapping(address => Investment) private userInvestments;\\n\\n    mapping(uint256 => Investment) private idToInvestment;\\n\\n    mapping(address => mapping(uint256 => bool)) private verifyGroup;\\n\\n    mapping(address => mapping(uint256 => bool)) private verifyInvestment;\\n\\n    Group[] private allGroups;\\n    Investment[] private allInvestments;\\n\\n    event SaveToken(\\n        address indexed tokenAddress,\\n        uint256 saveDuration,\\n        uint256 timeSaved,\\n        uint256 tokenBalance\\n    );\\n    event SaveTelos(\\n        uint256 telosDuration,\\n        uint256 timeSaved,\\n        uint256 tokenBalance\\n    );\\n    event Goal(uint256 setGoal);\\n    event GroupCreated(Group groupDetails);\\n    event GroupVisibilityStatus(\\n        uint256 indexed id,\\n        GroupVisibility _visibility\\n    );\\n    event CircleAdded(bool circleMemberAdded);\\n    event GroupJoined(Group groupDetails);\\n    event TelosWithdrawn(uint256 amount);\\n    event TokensWithdrawn(uint256 amount);\\n    event FISWithdrawn(uint256 amount);\\n    event LeftGroup(Group groupDetails);\\n    event InvestmentWithdrawn(uint256 investmentWithdrawn);\\n\\n    constructor(address tokenAddress) {\\n        minter = MintingInterface(tokenAddress);\\n        i_owner = msg.sender;\\n    }\\n\\n    modifier onlyOwner() {\\n        if (msg.sender == i_owner) revert NOT_OWNER();\\n        _;\\n    }\\n\\n    function saveTokens(\\n        address tokenAddress,\\n        uint256 amount,\\n        uint duration\\n    ) external {\\n        if (amount == 0) revert INSUFFICIENT_FUNDS();\\n        IERC20 allTokens = IERC20(tokenAddress);\\n        uint allowance = allTokens.allowance(msg.sender, address(this));\\n        if (allowance >= amount) revert NOT_APPROVED();\\n\\n        userAddressToTokenToData[msg.sender][tokenAddress].saveDuration =\\n            block.timestamp +\\n            (duration * 1 days);\\n        userAddressToTokenToData[msg.sender][tokenAddress].timeSaved = 0;\\n        userAddressToTokenToData[msg.sender][tokenAddress]\\n            .tokenBalance += amount;\\n\\n        allTokens.transferFrom(msg.sender, address(this), amount);\\n\\n        emit SaveToken(\\n            tokenAddress,\\n            userAddressToTokenToData[msg.sender][tokenAddress].saveDuration,\\n            duration,\\n            userAddressToTokenToData[msg.sender][tokenAddress].tokenBalance\\n        );\\n    }\\n\\n    function saveTelos(uint256 duration) external payable {\\n        if (msg.value == 0) revert INSUFFICIENT_FUNDS();\\n        userAddressToUserData[msg.sender].telosBalance += msg.value;\\n        userAddressToUserData[msg.sender].telosDuration = duration;\\n        userAddressToUserData[msg.sender].timeSaved = block.timestamp;\\n\\n        emit SaveTelos(\\n            duration,\\n            block.timestamp,\\n            userAddressToUserData[msg.sender].telosBalance\\n        );\\n    }\\n\\n    function setGoal(uint256 goalAmount) external {\\n        userAddressToUserData[msg.sender].Goal = goalAmount;\\n\\n        emit Goal(goalAmount);\\n    }\\n\\n    function createGroup(\\n        uint256 _duration,\\n        uint256 _targetAmount,\\n        GroupVisibility _visibility,\\n        string calldata _title,\\n        string calldata _description,\\n        uint _category\\n    ) external {\\n        groupCount++;\\n        _duration = (_duration * 1 days) + block.timestamp;\\n\\n        groupById[groupCount] = Group(\\n            groupCount,\\n            _duration,\\n            _targetAmount,\\n            _visibility,\\n            _title,\\n            _description,\\n            _category,\\n            new address[](0),\\n            msg.sender,\\n            block.timestamp\\n        );\\n\\n        User storage groupOwner = userAddressToUserData[msg.sender];\\n        groupOwner.groups.push(groupCount);\\n\\n        allGroups.push(\\n            Group(\\n                groupCount,\\n                _duration,\\n                _targetAmount,\\n                _visibility,\\n                _title,\\n                _description,\\n                _category,\\n                new address[](0),\\n                msg.sender,\\n                block.timestamp\\n            )\\n        );\\n\\n        emit GroupCreated(\\n            Group(\\n                groupCount,\\n                _duration,\\n                _targetAmount,\\n                _visibility,\\n                _title,\\n                _description,\\n                _category,\\n                new address[](0),\\n                msg.sender,\\n                block.timestamp\\n            )\\n        );\\n    }\\n\\n    function editGroup(uint256 id, GroupVisibility _visibility) external {\\n        Group storage groupToBeEdited = groupById[id];\\n        groupToBeEdited.visibility = _visibility;\\n        allGroups[id - 1].visibility = _visibility;\\n\\n        emit GroupVisibilityStatus(id, _visibility);\\n    }\\n\\n    function addToCircle(address circleAddress) external {\\n        User storage addingToCircle = userAddressToUserData[msg.sender];\\n        addingToCircle.circle.push(circleAddress);\\n        bool added = true;\\n\\n        emit CircleAdded(added);\\n    }\\n\\n    function joinGroup(uint id) external {\\n        bool verify = verifyGroup[msg.sender][id];\\n        if (verify) revert USER_EXISTS();\\n        User storage UpdatingUserData = userAddressToUserData[msg.sender];\\n        Group storage addingUserToGroup = groupById[id];\\n\\n        if (addingUserToGroup.visibility == GroupVisibility.PUBLIC) {\\n            UpdatingUserData.groups.push(id);\\n            addingUserToGroup.groupMembers.push(msg.sender);\\n        } else {\\n            address creatorAddress = addingUserToGroup.creator;\\n            address[] memory membersOfCircle = userAddressToUserData[\\n                creatorAddress\\n            ].circle;\\n            bool foundCircleMember = false;\\n            for (uint i = 0; i < membersOfCircle.length; i++) {\\n                if (msg.sender == membersOfCircle[i]) {\\n                    foundCircleMember = true;\\n                    break;\\n                }\\n            }\\n            if (foundCircleMember) {\\n                UpdatingUserData.groups.push(id);\\n                addingUserToGroup.groupMembers.push(msg.sender);\\n            } else revert NOT_MEMBER();\\n        }\\n        verifyGroup[msg.sender][id] = true;\\n\\n        emit GroupJoined(addingUserToGroup);\\n    }\\n\\n    function leaveGroup(uint id) external {\\n        bool verify = verifyGroup[msg.sender][id];\\n        if (!verify) revert NOT_MEMBER();\\n        uint256[] storage updatingUserData = userAddressToUserData[msg.sender]\\n            .groups;\\n        address[] storage removeUser = groupById[id].groupMembers;\\n        for (uint i = 0; i < updatingUserData.length; i++) {\\n            if (updatingUserData[i] == id) {\\n                delete updatingUserData[i];\\n                break;\\n            }\\n        }\\n        for (uint i = 0; i < removeUser.length; i++) {\\n            if (removeUser[i] == msg.sender) {\\n                delete removeUser[i];\\n                break;\\n            }\\n        }\\n\\n        delete verifyGroup[msg.sender][id];\\n\\n        emit LeftGroup(groupById[id]);\\n    }\\n\\n    function withdrawTelos(uint amount) external {\\n        // require time and calc charge\\n        uint balance = userAddressToUserData[msg.sender].telosBalance;\\n        if (amount > balance) revert INSUFFICIENT_FUNDS();\\n        unchecked {\\n            userAddressToUserData[msg.sender].telosBalance -= amount;\\n        }\\n        (bool success, ) = msg.sender.call{value: amount}(\\\"\\\");\\n        if (!success) revert FAILED();\\n\\n        emit TelosWithdrawn(amount);\\n    }\\n\\n    function withdrawTokens(address tokenAddress, uint amount) external {\\n        uint balance = userAddressToTokenToData[msg.sender][tokenAddress]\\n            .tokenBalance;\\n        if (amount > balance) revert INSUFFICIENT_FUNDS();\\n        unchecked {\\n            userAddressToTokenToData[msg.sender][tokenAddress]\\n                .tokenBalance -= amount;\\n        }\\n        IERC20 token = IERC20(tokenAddress);\\n        token.transfer(msg.sender, amount);\\n\\n        emit TokensWithdrawn(amount);\\n    }\\n\\n    function withdrawTokenRewards(\\n        address tokenAddress,\\n        uint256 amount\\n    ) external {\\n        if (amount >= userAddressToUserData[msg.sender].rewardsEarned)\\n            revert INSUFFICIENT_FUNDS();\\n        unchecked {\\n            userAddressToUserData[msg.sender].rewardsEarned -= amount;\\n            userAddressToTokenToData[msg.sender][tokenAddress]\\n                .tokenBalance -= amount;\\n        }\\n\\n        minter.mint(msg.sender, amount);\\n\\n        emit FISWithdrawn(amount);\\n    }\\n\\n    function createInvestment(\\n        string memory _title,\\n        string memory _description,\\n        uint256 _depositPrice,\\n        uint256 _duration,\\n        uint256 _percentInterest\\n    ) external {\\n        if (_percentInterest >= 10 && _percentInterest <= 20) {\\n            investmentCount++;\\n            idToInvestment[investmentCount] = Investment(\\n                investmentCount,\\n                _title,\\n                _description,\\n                _depositPrice,\\n                _duration,\\n                _percentInterest,\\n                new address[](0),\\n                true,\\n                Status.IN_PROGRESS,\\n                0\\n            );\\n            allInvestments.push(\\n                Investment(\\n                    investmentCount,\\n                    _title,\\n                    _description,\\n                    _depositPrice,\\n                    _duration,\\n                    _percentInterest,\\n                    new address[](0),\\n                    true,\\n                    Status.IN_PROGRESS,\\n                    0\\n                )\\n            );\\n        } else revert NOT_IN_PERCENT_RANGE();\\n    }\\n\\n    // Customer joins investment\\n    function invest(uint id) external {\\n        User storage user = userAddressToUserData[msg.sender];\\n        bool verify = verifyInvestment[msg.sender][id];\\n        if (verify) revert USER_EXISTS();\\n\\n        if (!(idToInvestment[id].open)) revert NOT_AVAILABLE();\\n        if (user.telosBalance >= idToInvestment[id].depositPrice)\\n            revert INSUFFICIENT_FUNDS();\\n\\n        user.investments.push(id);\\n        idToInvestment[id].investmentParticipants.push(msg.sender);\\n\\n        // add to investmentWallet\\n        investmentWallet += idToInvestment[id].depositPrice;\\n\\n        // transfer collateral\\n        user.telosBalance -= idToInvestment[id].depositPrice;\\n        user.investmentCollateral += idToInvestment[id].depositPrice;\\n\\n        delete verifyInvestment[msg.sender][id];\\n    }\\n\\n    // Admin disburses profit #onlyOwner\\n    // function disburseProfit(uint256 id) external payable {\\n    //     Investment storage investment = idToInvestment[id];\\n    //     address[] memory owners = investment.investmentParticipants;\\n    //     if (investment.open) revert NOT_AVAILABLE();\\n    //     if (investment.status == Status.IN_PROGRESS) revert IN_PROGRESS();\\n    //     uint256 unitProfit = calcDisburseProfit(\\n    //         investment.depositPrice,\\n    //         investment.percentInterest\\n    //     );\\n    //     uint256 totalProfit = unitProfit * owners.length;\\n\\n    //     for (uint i = 0; i < owners.length; i++) {\\n    //         User storage user = userAddressToUserData[owners[i]];\\n    //         if (investment.status == Status.SUCCESS) {\\n    //             if (msg.value != totalProfit) revert INSUFFICIENT_FUNDS();\\n    //             user.telosBalance += unitProfit;\\n    //             user.investmentCollateral -= investment.depositPrice;\\n    //         }\\n    //         if (investment.status == Status.FAILED) {\\n    //             user.rewardsEarned += user.investmentCollateral;\\n    //             user.investmentCollateral -= investment.depositPrice;\\n    //         }\\n    //     }\\n    // }\\n\\n    // change status of investment and open or not of the investment\\n    function changeInvestmentStatus(\\n        uint256 id,\\n        bool _open,\\n        Status _status\\n    ) external onlyOwner {\\n        Investment storage investment = idToInvestment[id];\\n        investment.open = _open;\\n        investment.status = _status;\\n    }\\n\\n    function withdrawForInvestment(uint amount) external onlyOwner {\\n        if (investmentWallet >= amount) revert INSUFFICIENT_FUNDS();\\n        unchecked {\\n            investmentWallet -= amount;\\n        }\\n        (bool success, ) = msg.sender.call{value: amount}(\\\"\\\");\\n        if (!success) revert FAILED();\\n\\n        emit InvestmentWithdrawn(amount);\\n    }\\n\\n    // Getter functions\\n    // function circleMembers() external view returns (address[] memory) {\\n    //     return userAddressToUserData[msg.sender].circle;\\n    // }\\n\\n    function getGroupById(uint id) external view returns (Group memory) {\\n        return groupById[id];\\n    }\\n\\n    function getAllGroups() external view returns (Group[] memory) {\\n        return allGroups;\\n    }\\n\\n    function getUser() external view returns (User memory) {\\n        return userAddressToUserData[msg.sender];\\n    }\\n\\n    function getUserTokensData() external returns (TokenSavingsData[] memory) {\\n        User storage userData = userAddressToUserData[msg.sender];\\n        address[] memory userTokensAddresses = userData.tokens;\\n\\n        TokenSavingsData[] memory listOfUserTokensData = new TokenSavingsData[](\\n            userTokensAddresses.length\\n        );\\n\\n        for (uint i = 0; i < userTokensAddresses.length; i++) {\\n            TokenSavingsData storage tokenData = userAddressToTokenToData[\\n                msg.sender\\n            ][userTokensAddresses[i]];\\n\\n            // update rewards\\n            uint256 secondsPassed = (block.timestamp - tokenData.timeSaved);\\n            if (secondsPassed >= 86400) {\\n                uint256 newRewards = (tokenData.tokenBalance *\\n                    secondsPassed *\\n                    (calcRewardsPerSeconds(percentageRewardPerDay) * rate)) /\\n                    1e18;\\n                userData.rewardsEarned += newRewards;\\n                tokenData.timeSaved = block.timestamp;\\n                tokenData.tokenRewards += newRewards;\\n            }\\n\\n            listOfUserTokensData[i] = tokenData;\\n        }\\n        return listOfUserTokensData;\\n    }\\n\\n    function changePerentageRewardPerDay(uint256 _tokenRewards) external {\\n        percentageRewardPerDay = _tokenRewards;\\n    }\\n\\n    function calcRewardsPerSeconds(\\n        uint dailyRate\\n    ) internal pure returns (uint256) {\\n        return (dailyRate * 1e16) / (24 * 60 * 60);\\n    }\\n\\n    function getAllInvestments() external view returns (Investment[] memory) {\\n        return allInvestments;\\n    }\\n\\n    function getInvestmentById(\\n        uint id\\n    ) external view returns (Investment memory) {\\n        return idToInvestment[id];\\n    }\\n\\n    function getAllUserInvestments()\\n        external\\n        view\\n        returns (Investment[] memory)\\n    {\\n        uint256[] memory allUserInvestmentsIds = userAddressToUserData[\\n            msg.sender\\n        ].investments;\\n        Investment[] memory allUserInvestments = new Investment[](\\n            allUserInvestmentsIds.length\\n        );\\n        for (uint i = 0; i < allUserInvestmentsIds.length; i++) {\\n            allUserInvestments[i] = idToInvestment[allUserInvestmentsIds[i]];\\n        }\\n\\n        return allUserInvestments;\\n    }\\n\\n    function getInvestmentWallet() external view returns (uint256) {\\n        return investmentWallet;\\n    }\\n\\n    function calcDisburseProfit(\\n        uint256 depositPrice,\\n        uint256 percentInterest\\n    ) internal pure returns (uint256) {\\n        uint256 totalProfit = depositPrice + (percentInterest * depositPrice);\\n        return totalProfit;\\n    }\\n}\\n\",\"keccak256\":\"0x62a6b75c7c334a111232c7ad87610f62e59b4c0860903acf59a8506f0c1b9fe2\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a0604052600160025560026003553480156200001b57600080fd5b5060405162005f4c38038062005f4c833981810160405281019062000041919062000127565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505062000159565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000ef82620000c2565b9050919050565b6200010181620000e2565b81146200010d57600080fd5b50565b6000815190506200012181620000f6565b92915050565b60006020828403121562000140576200013f620000bd565b5b6000620001508482850162000110565b91505092915050565b608051615dd06200017c6000396000818161075d0152611f1d0152615dd06000f3fe60806040526004361061014b5760003560e01c8063615b8af7116100b6578063b5bfcc3a1161006f578063b5bfcc3a14610450578063d6c48c7f1461047b578063e1045c40146104b8578063eed02e4b146104e1578063f4dbd5081461050a578063f55c5321146105265761014b565b8063615b8af7146103405780636cc29ea014610369578063832880e7146103a65780638d9ad08e146103d1578063a3adcb8f146103fc578063b1732352146104275761014b565b806337a85c711161010857806337a85c7114610248578063386e2fc31461027157806340931cbb1461029c5780634b29c448146102c557806355f860c0146102ee5780635e669095146103175761014b565b806306b091f9146101505780630f5766651461017957806316c4998b146101a257806321cd3cae146101cb5780632afcf480146101f657806333471df51461021f575b600080fd5b34801561015c57600080fd5b5061017760048036038101906101729190614294565b61054f565b005b34801561018557600080fd5b506101a0600480360381019061019b91906142d4565b61075b565b005b3480156101ae57600080fd5b506101c960048036038101906101c491906142d4565b610909565b005b3480156101d757600080fd5b506101e0610ab9565b6040516101ed919061467f565b60405180910390f35b34801561020257600080fd5b5061021d600480360381019061021891906142d4565b610d8e565b005b34801561022b57600080fd5b50610246600480360381019061024191906142d4565b6110b0565b005b34801561025457600080fd5b5061026f600480360381019061026a91906146a1565b61139d565b005b34801561027d57600080fd5b50610286611487565b60405161029391906147e5565b60405180910390f35b3480156102a857600080fd5b506102c360048036038101906102be9190614891565b6117c7565b005b3480156102d157600080fd5b506102ec60048036038101906102e791906142d4565b611e9a565b005b3480156102fa57600080fd5b50610315600480360381019061031091906149bd565b611f1b565b005b34801561032357600080fd5b5061033e60048036038101906103399190614294565b612005565b005b34801561034c57600080fd5b50610367600480360381019061036291906142d4565b612227565b005b34801561037557600080fd5b50610390600480360381019061038b91906142d4565b612231565b60405161039d9190614af8565b60405180910390f35b3480156103b257600080fd5b506103bb6124d4565b6040516103c89190614ccd565b60405180910390f35b3480156103dd57600080fd5b506103e661278a565b6040516103f39190614ef0565b60405180910390f35b34801561040857600080fd5b50610411612a24565b60405161041e9190614ef0565b60405180910390f35b34801561043357600080fd5b5061044e60048036038101906104499190614f12565b612dcd565b005b34801561045c57600080fd5b50610465613255565b6040516104729190614f74565b60405180910390f35b34801561048757600080fd5b506104a2600480360381019061049d91906142d4565b61325f565b6040516104af9190615077565b60405180910390f35b3480156104c457600080fd5b506104df60048036038101906104da91906151c9565b6134c7565b005b3480156104ed57600080fd5b50610508600480360381019061050391906142d4565b613863565b005b610524600480360381019061051f91906142d4565b613d0a565b005b34801561053257600080fd5b5061054d6004803603810190610548919061527c565b613eab565b005b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015490508082111561060d576040517fe793143800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000828254039250508190555060008390508073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b81526004016106da9291906152cb565b6020604051808303816000875af11580156106f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071d9190615309565b507f9c6393f251205f9e03559951cab4c9ae71767b6174f77944a5b0c2fa51fbda9f8360405161074d9190614f74565b60405180910390a150505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16036107e0576040517f71d78b1200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806005541061081b576040517fe793143800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060056000828254039250508190555060003373ffffffffffffffffffffffffffffffffffffffff168260405161085190615367565b60006040518083038185875af1925050503d806000811461088e576040519150601f19603f3d011682016040523d82523d6000602084013e610893565b606091505b50509050806108ce576040517f3969307d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f87a9be6f8514f2b4bd9a7ce90293c355391c84f006fae1f7453b6b0570e8fc3f826040516108fd9190614f74565b60405180910390a15050565b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015490508082111561098a576040517fe793143800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000828254039250508190555060003373ffffffffffffffffffffffffffffffffffffffff1683604051610a0090615367565b60006040518083038185875af1925050503d8060008114610a3d576040519150601f19603f3d011682016040523d82523d6000602084013e610a42565b606091505b5050905080610a7d576040517f3969307d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f725f63f7df294938d2e09b5b1f09ffcdb5f881ad6629b9e75fc3626f57d2e5fc83604051610aac9190614f74565b60405180910390a1505050565b6060600d805480602002602001604051908101604052809291908181526020016000905b82821015610d8557838290600052602060002090600a0201604051806101400160405290816000820154815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff166001811115610b4457610b4361433c565b5b6001811115610b5657610b5561433c565b5b8152602001600482018054610b6a906153ab565b80601f0160208091040260200160405190810160405280929190818152602001828054610b96906153ab565b8015610be35780601f10610bb857610100808354040283529160200191610be3565b820191906000526020600020905b815481529060010190602001808311610bc657829003601f168201915b50505050508152602001600582018054610bfc906153ab565b80601f0160208091040260200160405190810160405280929190818152602001828054610c28906153ab565b8015610c755780601f10610c4a57610100808354040283529160200191610c75565b820191906000526020600020905b815481529060010190602001808311610c5857829003601f168201915b505050505081526020016006820154815260200160078201805480602002602001604051908101604052809291908181526020018280548015610d0d57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610cc3575b505050505081526020016008820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160098201548152505081526020019060010190610add565b50505050905090565b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060009054906101000a900460ff1690508015610e6b576040517f74c16f6400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600a600084815260200190815260200160002060070160009054906101000a900460ff16610ec5576040517fe5313df000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600a600084815260200190815260200160002060030154826001015410610f18576040517fe793143800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81600a01839080600181540180825580915050600190039060005260206000200160009091909190915055600a6000848152602001908152602001600020600601339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600a60008481526020019081526020016000206003015460056000828254610fe2919061540b565b92505081905550600a600084815260200190815260200160002060030154826001016000828254611013919061543f565b92505081905550600a600084815260200190815260200160002060030154826009016000828254611044919061540b565b92505081905550600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060006101000a81549060ff0219169055505050565b6000600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060009054906101000a900460ff16905080611149576040517fb9034a7a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206006019050600060066000858152602001908152602001600020600701905060005b828054905081101561121557848382815481106111cc576111cb615473565b5b906000526020600020015403611202578281815481106111ef576111ee615473565b5b9060005260206000200160009055611215565b808061120d906154a2565b9150506111ac565b5060005b81805490508110156112ed573373ffffffffffffffffffffffffffffffffffffffff1682828154811061124f5761124e615473565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036112da578181815481106112a8576112a7615473565b5b9060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556112ed565b80806112e5906154a2565b915050611219565b50600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002060006101000a81549060ff02191690557fd0e91b82e81664b2f64467c1c586eb5ab5d45ec4bae333aa37435cedc46eeb956006600086815260200190815260200160002060405161138f91906157ec565b60405180910390a150505050565b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905080600701829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600190507f20fd5cdbf6d6073eef285d26843b7a19f442bd5304e98758a58f144a8b1db9b58160405161147a919061581d565b60405180910390a1505050565b60606000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008160040180548060200260200160405190810160405280929190818152602001828054801561155257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611508575b505050505090506000815167ffffffffffffffff8111156115765761157561509e565b5b6040519080825280602002602001820160405280156115af57816020015b61159c613fae565b8152602001906001900390816115945790505b50905060005b82518110156117bd576000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085848151811061161457611613615473565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600081600301544261166a919061543f565b9050620151808110611700576000670de0b6b3a764000060025461168f600354613f84565b6116999190615838565b8385600101546116a99190615838565b6116b39190615838565b6116bd91906158a9565b9050808760050160008282546116d3919061540b565b92505081905550428360030181905550808360040160008282546116f7919061540b565b92505081905550505b816040518060a00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015481526020016003820154815260200160048201548152505084848151811061179d5761179c615473565b5b6020026020010181905250505080806117b5906154a2565b9150506115b5565b5080935050505090565b6000808154809291906117d9906154a2565b91905055504262015180896117ee9190615838565b6117f8919061540b565b9750604051806101400160405280600054815260200189815260200188815260200187600181111561182d5761182c61433c565b5b815260200186868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050815260200184848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508152602001828152602001600067ffffffffffffffff8111156118e7576118e661509e565b5b6040519080825280602002602001820160405280156119155781602001602082028036833780820191505090505b5081526020013373ffffffffffffffffffffffffffffffffffffffff16815260200142815250600660008054815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548160ff021916908360018111156119985761199761433c565b5b021790555060808201518160040190816119b29190615a71565b5060a08201518160050190816119c89190615a71565b5060c0820151816006015560e08201518160070190805190602001906119ef929190613ff3565b506101008201518160080160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061012082015181600901559050506000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050806006016000549080600181540180825580915050600190039060005260206000200160009091909190915055600d60405180610140016040528060005481526020018b81526020018a8152602001896001811115611aeb57611aea61433c565b5b815260200188888080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050815260200186868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508152602001848152602001600067ffffffffffffffff811115611ba557611ba461509e565b5b604051908082528060200260200182016040528015611bd35781602001602082028036833780820191505090505b5081526020013373ffffffffffffffffffffffffffffffffffffffff1681526020014281525090806001815401808255809150506001900390600052602060002090600a020160009091909190915060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548160ff02191690836001811115611c6b57611c6a61433c565b5b02179055506080820151816004019081611c859190615a71565b5060a0820151816005019081611c9b9190615a71565b5060c0820151816006015560e0820151816007019080519060200190611cc2929190613ff3565b506101008201518160080160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610120820151816009015550507f5dee5e611798aa174dc2377aab8d1706cd9b19ebab3c8ab8c97fbffe286f2fb760405180610140016040528060005481526020018b81526020018a8152602001896001811115611d6c57611d6b61433c565b5b815260200188888080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050815260200186868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508152602001848152602001600067ffffffffffffffff811115611e2657611e2561509e565b5b604051908082528060200260200182016040528015611e545781602001602082028036833780820191505090505b5081526020013373ffffffffffffffffffffffffffffffffffffffff16815260200142815250604051611e879190614af8565b60405180910390a1505050505050505050565b80600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600801819055507ffb9a913f54617632549c7e1ece79ea1a54c1d56d517f2dff464f0a3d82634df781604051611f109190614f74565b60405180910390a150565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1603611fa0576040517f71d78b1200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600a60008581526020019081526020016000209050828160070160006101000a81548160ff021916908315150217905550818160070160016101000a81548160ff02191690836002811115611ffa57611ff961433c565b5b021790555050505050565b600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600501548110612080576040517fe793143800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206005016000828254039250508190555080600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008282540392505081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933836040518363ffffffff1660e01b81526004016121ba9291906152cb565b600060405180830381600087803b1580156121d457600080fd5b505af11580156121e8573d6000803e3d6000fd5b505050507f7b170314096270fcb731b4f137213245a2d7d6bd865cf3b2f1ef48dbda28fd818160405161221b9190614f74565b60405180910390a15050565b8060038190555050565b61223961407d565b60066000838152602001908152602001600020604051806101400160405290816000820154815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff16600181111561229b5761229a61433c565b5b60018111156122ad576122ac61433c565b5b81526020016004820180546122c1906153ab565b80601f01602080910402602001604051908101604052809291908181526020018280546122ed906153ab565b801561233a5780601f1061230f5761010080835404028352916020019161233a565b820191906000526020600020905b81548152906001019060200180831161231d57829003601f168201915b50505050508152602001600582018054612353906153ab565b80601f016020809104026020016040519081016040528092919081815260200182805461237f906153ab565b80156123cc5780601f106123a1576101008083540402835291602001916123cc565b820191906000526020600020905b8154815290600101906020018083116123af57829003601f168201915b50505050508152602001600682015481526020016007820180548060200260200160405190810160405280929190818152602001828054801561246457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161241a575b505050505081526020016008820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016009820154815250509050919050565b6124dc6140f8565b600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806101600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201548152602001600382015481526020016004820180548060200260200160405190810160405280929190818152602001828054801561262057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116125d6575b50505050508152602001600582015481526020016006820180548060200260200160405190810160405280929190818152602001828054801561268257602002820191906000526020600020905b81548152602001906001019080831161266e575b505050505081526020016007820180548060200260200160405190810160405280929190818152602001828054801561271057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116126c6575b505050505081526020016008820154815260200160098201548152602001600a820180548060200260200160405190810160405280929190818152602001828054801561277c57602002820191906000526020600020905b815481526020019060010190808311612768575b505050505081525050905090565b6060600e805480602002602001604051908101604052809291908181526020016000905b82821015612a1b578382906000526020600020906009020160405180610140016040529081600082015481526020016001820180546127ec906153ab565b80601f0160208091040260200160405190810160405280929190818152602001828054612818906153ab565b80156128655780601f1061283a57610100808354040283529160200191612865565b820191906000526020600020905b81548152906001019060200180831161284857829003601f168201915b5050505050815260200160028201805461287e906153ab565b80601f01602080910402602001604051908101604052809291908181526020018280546128aa906153ab565b80156128f75780601f106128cc576101008083540402835291602001916128f7565b820191906000526020600020905b8154815290600101906020018083116128da57829003601f168201915b50505050508152602001600382015481526020016004820154815260200160058201548152602001600682018054806020026020016040519081016040528092919081815260200182805480156129a357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311612959575b505050505081526020016007820160009054906101000a900460ff161515151581526020016007820160019054906101000a900460ff1660028111156129ec576129eb61433c565b5b60028111156129fe576129fd61433c565b5b8152602001600882015481525050815260200190600101906127ae565b50505050905090565b60606000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600a01805480602002602001604051908101604052809291908181526020018280548015612ab457602002820191906000526020600020905b815481526020019060010190808311612aa0575b505050505090506000815167ffffffffffffffff811115612ad857612ad761509e565b5b604051908082528060200260200182016040528015612b1157816020015b612afe614168565b815260200190600190039081612af65790505b50905060005b8251811015612dc457600a6000848381518110612b3757612b36615473565b5b602002602001015181526020019081526020016000206040518061014001604052908160008201548152602001600182018054612b73906153ab565b80601f0160208091040260200160405190810160405280929190818152602001828054612b9f906153ab565b8015612bec5780601f10612bc157610100808354040283529160200191612bec565b820191906000526020600020905b815481529060010190602001808311612bcf57829003601f168201915b50505050508152602001600282018054612c05906153ab565b80601f0160208091040260200160405190810160405280929190818152602001828054612c31906153ab565b8015612c7e5780601f10612c5357610100808354040283529160200191612c7e565b820191906000526020600020905b815481529060010190602001808311612c6157829003601f168201915b5050505050815260200160038201548152602001600482015481526020016005820154815260200160068201805480602002602001604051908101604052809291908181526020018280548015612d2a57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311612ce0575b505050505081526020016007820160009054906101000a900460ff161515151581526020016007820160019054906101000a900460ff166002811115612d7357612d7261433c565b5b6002811115612d8557612d8461433c565b5b8152602001600882015481525050828281518110612da657612da5615473565b5b60200260200101819052508080612dbc906154a2565b915050612b17565b50809250505090565b60008203612e07576040517fe793143800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600083905060008173ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401612e49929190615b43565b602060405180830381865afa158015612e66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e8a9190615b81565b9050838110612ec5576040517f5f05571000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6201518083612ed49190615838565b42612edf919061540b565b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201819055506000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003018190555083600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000828254613076919061540b565b925050819055508173ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b81526004016130ba93929190615bae565b6020604051808303816000875af11580156130d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130fd9190615309565b508473ffffffffffffffffffffffffffffffffffffffff167f8a7a6da1d572d2a9793e0b6903910e6c69c42cb8e00d9e982525af036342a6dc600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015485600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015460405161324693929190615be5565b60405180910390a25050505050565b6000600554905090565b613267614168565b600a600083815260200190815260200160002060405180610140016040529081600082015481526020016001820180546132a0906153ab565b80601f01602080910402602001604051908101604052809291908181526020018280546132cc906153ab565b80156133195780601f106132ee57610100808354040283529160200191613319565b820191906000526020600020905b8154815290600101906020018083116132fc57829003601f168201915b50505050508152602001600282018054613332906153ab565b80601f016020809104026020016040519081016040528092919081815260200182805461335e906153ab565b80156133ab5780601f10613380576101008083540402835291602001916133ab565b820191906000526020600020905b81548152906001019060200180831161338e57829003601f168201915b505050505081526020016003820154815260200160048201548152602001600582015481526020016006820180548060200260200160405190810160405280929190818152602001828054801561345757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161340d575b505050505081526020016007820160009054906101000a900460ff161515151581526020016007820160019054906101000a900460ff1660028111156134a05761349f61433c565b5b60028111156134b2576134b161433c565b5b81526020016008820154815250509050919050565b600a81101580156134d9575060148111155b1561382a57600460008154809291906134f1906154a2565b91905055506040518061014001604052806004548152602001868152602001858152602001848152602001838152602001828152602001600067ffffffffffffffff8111156135435761354261509e565b5b6040519080825280602002602001820160405280156135715781602001602082028036833780820191505090505b508152602001600115158152602001600060028111156135945761359361433c565b5b81526020016000815250600a600060045481526020019081526020016000206000820151816000015560208201518160010190816135d29190615a71565b5060408201518160020190816135e89190615a71565b50606082015181600301556080820151816004015560a0820151816005015560c0820151816006019080519060200190613623929190613ff3565b5060e08201518160070160006101000a81548160ff0219169083151502179055506101008201518160070160016101000a81548160ff021916908360028111156136705761366f61433c565b5b02179055506101208201518160080155905050600e6040518061014001604052806004548152602001878152602001868152602001858152602001848152602001838152602001600067ffffffffffffffff8111156136d2576136d161509e565b5b6040519080825280602002602001820160405280156137005781602001602082028036833780820191505090505b508152602001600115158152602001600060028111156137235761372261433c565b5b8152602001600081525090806001815401808255809150506001900390600052602060002090600902016000909190919091506000820151816000015560208201518160010190816137759190615a71565b50604082015181600201908161378b9190615a71565b50606082015181600301556080820151816004015560a0820151816005015560c08201518160060190805190602001906137c6929190613ff3565b5060e08201518160070160006101000a81548160ff0219169083151502179055506101008201518160070160016101000a81548160ff021916908360028111156138135761381261433c565b5b02179055506101208201518160080155505061385c565b6040517f5962b58700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050505050565b6000600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060009054906101000a900460ff16905080156138fd576040517f74c16f6400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600060066000858152602001908152602001600020905060018081111561396a5761396961433c565b5b8160030160009054906101000a900460ff16600181111561398e5761398d61433c565b5b03613a28578160060184908060018154018082558091505060019003906000526020600020016000909190919091505580600701339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550613c64565b60008160080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600701805480602002602001604051908101604052809291908181526020018280548015613b1557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311613acb575b505050505090506000805b8251811015613b9257828181518110613b3c57613b3b615473565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1603613b7f5760019150613b92565b8080613b8a906154a2565b915050613b20565b508015613c2e578460060187908060018154018082558091505060019003906000526020600020016000909190919091505583600701339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550613c60565b6040517fb9034a7a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050505b6001600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600086815260200190815260200160002060006101000a81548160ff0219169083151502179055507fe0ca612158979c237731ca444b6ddcc8f942bf790623349add2ee130ac9d4fcd81604051613cfc9190615d4e565b60405180910390a150505050565b60003403613d44576040517fe793143800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b34600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000828254613d96919061540b565b9250508190555080600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555042600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055507f741129ebabac3d1d8298abf045729365e0c9139a4b99ddcffb9dbfaed2a40ef48142600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154604051613ea093929190615be5565b60405180910390a150565b6000600660008481526020019081526020016000209050818160030160006101000a81548160ff02191690836001811115613ee957613ee861433c565b5b021790555081600d600185613efe919061543f565b81548110613f0f57613f0e615473565b5b90600052602060002090600a020160030160006101000a81548160ff02191690836001811115613f4257613f4161433c565b5b0217905550827f03b95dda2b061abd005b34747d048e0fc3822a7422c839c34b67d00ba35dc8ac83604051613f779190615d7f565b60405180910390a2505050565b600062015180662386f26fc1000083613f9d9190615838565b613fa791906158a9565b9050919050565b6040518060a00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001600081525090565b82805482825590600052602060002090810192821561406c579160200282015b8281111561406b5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190614013565b5b50905061407991906141cf565b5090565b604051806101400160405280600081526020016000815260200160008152602001600060018111156140b2576140b161433c565b5b815260200160608152602001606081526020016000815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b604051806101600160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001606081526020016000815260200160608152602001606081526020016000815260200160008152602001606081525090565b60405180610140016040528060008152602001606081526020016060815260200160008152602001600081526020016000815260200160608152602001600015158152602001600060028111156141c2576141c161433c565b5b8152602001600081525090565b5b808211156141e85760008160009055506001016141d0565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061422b82614200565b9050919050565b61423b81614220565b811461424657600080fd5b50565b60008135905061425881614232565b92915050565b6000819050919050565b6142718161425e565b811461427c57600080fd5b50565b60008135905061428e81614268565b92915050565b600080604083850312156142ab576142aa6141f6565b5b60006142b985828601614249565b92505060206142ca8582860161427f565b9150509250929050565b6000602082840312156142ea576142e96141f6565b5b60006142f88482850161427f565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6143368161425e565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811061437c5761437b61433c565b5b50565b600081905061438d8261436b565b919050565b600061439d8261437f565b9050919050565b6143ad81614392565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156143ed5780820151818401526020810190506143d2565b60008484015250505050565b6000601f19601f8301169050919050565b6000614415826143b3565b61441f81856143be565b935061442f8185602086016143cf565b614438816143f9565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61447881614220565b82525050565b600061448a838361446f565b60208301905092915050565b6000602082019050919050565b60006144ae82614443565b6144b8818561444e565b93506144c38361445f565b8060005b838110156144f45781516144db888261447e565b97506144e683614496565b9250506001810190506144c7565b5085935050505092915050565b60006101408301600083015161451a600086018261432d565b50602083015161452d602086018261432d565b506040830151614540604086018261432d565b50606083015161455360608601826143a4565b506080830151848203608086015261456b828261440a565b91505060a083015184820360a0860152614585828261440a565b91505060c083015161459a60c086018261432d565b5060e083015184820360e08601526145b282826144a3565b9150506101008301516145c961010086018261446f565b506101208301516145de61012086018261432d565b508091505092915050565b60006145f58383614501565b905092915050565b6000602082019050919050565b600061461582614301565b61461f818561430c565b9350836020820285016146318561431d565b8060005b8581101561466d578484038952815161464e85826145e9565b9450614659836145fd565b925060208a01995050600181019050614635565b50829750879550505050505092915050565b60006020820190508181036000830152614699818461460a565b905092915050565b6000602082840312156146b7576146b66141f6565b5b60006146c584828501614249565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60a082016000820151614710600085018261446f565b506020820151614723602085018261432d565b506040820151614736604085018261432d565b506060820151614749606085018261432d565b50608082015161475c608085018261432d565b50505050565b600061476e83836146fa565b60a08301905092915050565b6000602082019050919050565b6000614792826146ce565b61479c81856146d9565b93506147a7836146ea565b8060005b838110156147d85781516147bf8882614762565b97506147ca8361477a565b9250506001810190506147ab565b5085935050505092915050565b600060208201905081810360008301526147ff8184614787565b905092915050565b6002811061481457600080fd5b50565b60008135905061482681614807565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126148515761485061482c565b5b8235905067ffffffffffffffff81111561486e5761486d614831565b5b60208301915083600182028301111561488a57614889614836565b5b9250929050565b60008060008060008060008060c0898b0312156148b1576148b06141f6565b5b60006148bf8b828c0161427f565b98505060206148d08b828c0161427f565b97505060406148e18b828c01614817565b965050606089013567ffffffffffffffff811115614902576149016141fb565b5b61490e8b828c0161483b565b9550955050608089013567ffffffffffffffff811115614931576149306141fb565b5b61493d8b828c0161483b565b935093505060a06149508b828c0161427f565b9150509295985092959890939650565b60008115159050919050565b61497581614960565b811461498057600080fd5b50565b6000813590506149928161496c565b92915050565b600381106149a557600080fd5b50565b6000813590506149b781614998565b92915050565b6000806000606084860312156149d6576149d56141f6565b5b60006149e48682870161427f565b93505060206149f586828701614983565b9250506040614a06868287016149a8565b9150509250925092565b600061014083016000830151614a29600086018261432d565b506020830151614a3c602086018261432d565b506040830151614a4f604086018261432d565b506060830151614a6260608601826143a4565b5060808301518482036080860152614a7a828261440a565b91505060a083015184820360a0860152614a94828261440a565b91505060c0830151614aa960c086018261432d565b5060e083015184820360e0860152614ac182826144a3565b915050610100830151614ad861010086018261446f565b50610120830151614aed61012086018261432d565b508091505092915050565b60006020820190508181036000830152614b128184614a10565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000614b52838361432d565b60208301905092915050565b6000602082019050919050565b6000614b7682614b1a565b614b808185614b25565b9350614b8b83614b36565b8060005b83811015614bbc578151614ba38882614b46565b9750614bae83614b5e565b925050600181019050614b8f565b5085935050505092915050565b600061016083016000830151614be2600086018261446f565b506020830151614bf5602086018261432d565b506040830151614c08604086018261432d565b506060830151614c1b606086018261432d565b5060808301518482036080860152614c3382826144a3565b91505060a0830151614c4860a086018261432d565b5060c083015184820360c0860152614c608282614b6b565b91505060e083015184820360e0860152614c7a82826144a3565b915050610100830151614c9161010086018261432d565b50610120830151614ca661012086018261432d565b50610140830151848203610140860152614cc08282614b6b565b9150508091505092915050565b60006020820190508181036000830152614ce78184614bc9565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b614d2481614960565b82525050565b60038110614d3b57614d3a61433c565b5b50565b6000819050614d4c82614d2a565b919050565b6000614d5c82614d3e565b9050919050565b614d6c81614d51565b82525050565b600061014083016000830151614d8b600086018261432d565b5060208301518482036020860152614da3828261440a565b91505060408301518482036040860152614dbd828261440a565b9150506060830151614dd2606086018261432d565b506080830151614de5608086018261432d565b5060a0830151614df860a086018261432d565b5060c083015184820360c0860152614e1082826144a3565b91505060e0830151614e2560e0860182614d1b565b50610100830151614e3a610100860182614d63565b50610120830151614e4f61012086018261432d565b508091505092915050565b6000614e668383614d72565b905092915050565b6000602082019050919050565b6000614e8682614cef565b614e908185614cfa565b935083602082028501614ea285614d0b565b8060005b85811015614ede5784840389528151614ebf8582614e5a565b9450614eca83614e6e565b925060208a01995050600181019050614ea6565b50829750879550505050505092915050565b60006020820190508181036000830152614f0a8184614e7b565b905092915050565b600080600060608486031215614f2b57614f2a6141f6565b5b6000614f3986828701614249565b9350506020614f4a8682870161427f565b9250506040614f5b8682870161427f565b9150509250925092565b614f6e8161425e565b82525050565b6000602082019050614f896000830184614f65565b92915050565b600061014083016000830151614fa8600086018261432d565b5060208301518482036020860152614fc0828261440a565b91505060408301518482036040860152614fda828261440a565b9150506060830151614fef606086018261432d565b506080830151615002608086018261432d565b5060a083015161501560a086018261432d565b5060c083015184820360c086015261502d82826144a3565b91505060e083015161504260e0860182614d1b565b50610100830151615057610100860182614d63565b5061012083015161506c61012086018261432d565b508091505092915050565b600060208201905081810360008301526150918184614f8f565b905092915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6150d6826143f9565b810181811067ffffffffffffffff821117156150f5576150f461509e565b5b80604052505050565b60006151086141ec565b905061511482826150cd565b919050565b600067ffffffffffffffff8211156151345761513361509e565b5b61513d826143f9565b9050602081019050919050565b82818337600083830152505050565b600061516c61516784615119565b6150fe565b90508281526020810184848401111561518857615187615099565b5b61519384828561514a565b509392505050565b600082601f8301126151b0576151af61482c565b5b81356151c0848260208601615159565b91505092915050565b600080600080600060a086880312156151e5576151e46141f6565b5b600086013567ffffffffffffffff811115615203576152026141fb565b5b61520f8882890161519b565b955050602086013567ffffffffffffffff8111156152305761522f6141fb565b5b61523c8882890161519b565b945050604061524d8882890161427f565b935050606061525e8882890161427f565b925050608061526f8882890161427f565b9150509295509295909350565b60008060408385031215615293576152926141f6565b5b60006152a18582860161427f565b92505060206152b285828601614817565b9150509250929050565b6152c581614220565b82525050565b60006040820190506152e060008301856152bc565b6152ed6020830184614f65565b9392505050565b6000815190506153038161496c565b92915050565b60006020828403121561531f5761531e6141f6565b5b600061532d848285016152f4565b91505092915050565b600081905092915050565b50565b6000615351600083615336565b915061535c82615341565b600082019050919050565b600061537282615344565b9150819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806153c357607f821691505b6020821081036153d6576153d561537c565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006154168261425e565b91506154218361425e565b9250828201905080821115615439576154386153dc565b5b92915050565b600061544a8261425e565b91506154558361425e565b925082820390508181111561546d5761546c6153dc565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006154ad8261425e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036154df576154de6153dc565b5b600182019050919050565b60008160001c9050919050565b6000819050919050565b600061551461550f836154ea565b6154f7565b9050919050565b600060ff82169050919050565b600061553b615536836154ea565b61551b565b9050919050565b60008190508160005260206000209050919050565b60008154615564816153ab565b61556e81866143be565b94506001821660008114615589576001811461559f576155d2565b60ff1983168652811515602002860193506155d2565b6155a885615542565b60005b838110156155ca578154818901526001820191506020810190506155ab565b808801955050505b50505092915050565b600081549050919050565b60008190508160005260206000209050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061562e615629836154ea565b6155fb565b9050919050565b6000615641825461561b565b9050919050565b6000600182019050919050565b6000615660826155db565b61566a818561444e565b9350615675836155e6565b8060005b838110156156ad5761568a82615635565b615694888261447e565b975061569f83615648565b925050600181019050615679565b5085935050505092915050565b6000610140830160008084015490506156d281615501565b6156df600087018261432d565b50600184015490506156f081615501565b6156fd602087018261432d565b506002840154905061570e81615501565b61571b604087018261432d565b506003840154905061572c81615528565b61573960608701826143a4565b506004840185830360808701526157508382615557565b9250506005840185830360a08701526157698382615557565b9250506006840154905061577c81615501565b61578960c087018261432d565b506007840185830360e08701526157a08382615655565b925050600884015490506157b38161561b565b6157c161010087018261446f565b50600984015490506157d281615501565b6157e061012087018261432d565b50819250505092915050565b6000602082019050818103600083015261580681846156ba565b905092915050565b61581781614960565b82525050565b6000602082019050615832600083018461580e565b92915050565b60006158438261425e565b915061584e8361425e565b925082820261585c8161425e565b91508282048414831517615873576158726153dc565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006158b48261425e565b91506158bf8361425e565b9250826158cf576158ce61587a565b5b828204905092915050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026159277fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826158ea565b61593186836158ea565b95508019841693508086168417925050509392505050565b6000819050919050565b600061596e6159696159648461425e565b615949565b61425e565b9050919050565b6000819050919050565b61598883615953565b61599c61599482615975565b8484546158f7565b825550505050565b600090565b6159b16159a4565b6159bc81848461597f565b505050565b5b818110156159e0576159d56000826159a9565b6001810190506159c2565b5050565b601f821115615a25576159f681615542565b6159ff846158da565b81016020851015615a0e578190505b615a22615a1a856158da565b8301826159c1565b50505b505050565b600082821c905092915050565b6000615a4860001984600802615a2a565b1980831691505092915050565b6000615a618383615a37565b9150826002028217905092915050565b615a7a826143b3565b67ffffffffffffffff811115615a9357615a9261509e565b5b615a9d82546153ab565b615aa88282856159e4565b600060209050601f831160018114615adb5760008415615ac9578287015190505b615ad38582615a55565b865550615b3b565b601f198416615ae986615542565b60005b82811015615b1157848901518255600182019150602085019450602081019050615aec565b86831015615b2e5784890151615b2a601f891682615a37565b8355505b6001600288020188555050505b505050505050565b6000604082019050615b5860008301856152bc565b615b6560208301846152bc565b9392505050565b600081519050615b7b81614268565b92915050565b600060208284031215615b9757615b966141f6565b5b6000615ba584828501615b6c565b91505092915050565b6000606082019050615bc360008301866152bc565b615bd060208301856152bc565b615bdd6040830184614f65565b949350505050565b6000606082019050615bfa6000830186614f65565b615c076020830185614f65565b615c146040830184614f65565b949350505050565b600061014083016000808401549050615c3481615501565b615c41600087018261432d565b5060018401549050615c5281615501565b615c5f602087018261432d565b5060028401549050615c7081615501565b615c7d604087018261432d565b5060038401549050615c8e81615528565b615c9b60608701826143a4565b50600484018583036080870152615cb28382615557565b9250506005840185830360a0870152615ccb8382615557565b92505060068401549050615cde81615501565b615ceb60c087018261432d565b506007840185830360e0870152615d028382615655565b92505060088401549050615d158161561b565b615d2361010087018261446f565b5060098401549050615d3481615501565b615d4261012087018261432d565b50819250505092915050565b60006020820190508181036000830152615d688184615c1c565b905092915050565b615d7981614392565b82525050565b6000602082019050615d946000830184615d70565b9291505056fea26469706673582212205a2ea1fc3f8a5a9aecc88b3ad57e7d9cbd29f34ff69b0e33a08f0e1c1e9fb50b64736f6c63430008140033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 108,
        "contract": "contracts/FIS_Protocol.sol:FISContract",
        "label": "groupCount",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 113,
        "contract": "contracts/FIS_Protocol.sol:FISContract",
        "label": "minter",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(MintingInterface)88"
      },
      {
        "astId": 116,
        "contract": "contracts/FIS_Protocol.sol:FISContract",
        "label": "rate",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 119,
        "contract": "contracts/FIS_Protocol.sol:FISContract",
        "label": "percentageRewardPerDay",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 121,
        "contract": "contracts/FIS_Protocol.sol:FISContract",
        "label": "investmentCount",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 123,
        "contract": "contracts/FIS_Protocol.sol:FISContract",
        "label": "investmentWallet",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 219,
        "contract": "contracts/FIS_Protocol.sol:FISContract",
        "label": "groupById",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_uint256,t_struct(Group)191_storage)"
      },
      {
        "astId": 226,
        "contract": "contracts/FIS_Protocol.sol:FISContract",
        "label": "userAddressToTokenToData",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_mapping(t_address,t_struct(TokenSavingsData)141_storage))"
      },
      {
        "astId": 231,
        "contract": "contracts/FIS_Protocol.sol:FISContract",
        "label": "userAddressToUserData",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_struct(User)168_storage)"
      },
      {
        "astId": 236,
        "contract": "contracts/FIS_Protocol.sol:FISContract",
        "label": "userInvestments",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_struct(Investment)214_storage)"
      },
      {
        "astId": 241,
        "contract": "contracts/FIS_Protocol.sol:FISContract",
        "label": "idToInvestment",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_uint256,t_struct(Investment)214_storage)"
      },
      {
        "astId": 247,
        "contract": "contracts/FIS_Protocol.sol:FISContract",
        "label": "verifyGroup",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))"
      },
      {
        "astId": 253,
        "contract": "contracts/FIS_Protocol.sol:FISContract",
        "label": "verifyInvestment",
        "offset": 0,
        "slot": "12",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))"
      },
      {
        "astId": 257,
        "contract": "contracts/FIS_Protocol.sol:FISContract",
        "label": "allGroups",
        "offset": 0,
        "slot": "13",
        "type": "t_array(t_struct(Group)191_storage)dyn_storage"
      },
      {
        "astId": 261,
        "contract": "contracts/FIS_Protocol.sol:FISContract",
        "label": "allInvestments",
        "offset": 0,
        "slot": "14",
        "type": "t_array(t_struct(Investment)214_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Group)191_storage)dyn_storage": {
        "base": "t_struct(Group)191_storage",
        "encoding": "dynamic_array",
        "label": "struct FISContract.Group[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Investment)214_storage)dyn_storage": {
        "base": "t_struct(Investment)214_storage",
        "encoding": "dynamic_array",
        "label": "struct FISContract.Investment[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(MintingInterface)88": {
        "encoding": "inplace",
        "label": "contract MintingInterface",
        "numberOfBytes": "20"
      },
      "t_enum(GroupVisibility)126": {
        "encoding": "inplace",
        "label": "enum FISContract.GroupVisibility",
        "numberOfBytes": "1"
      },
      "t_enum(Status)130": {
        "encoding": "inplace",
        "label": "enum FISContract.Status",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_mapping(t_address,t_struct(TokenSavingsData)141_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => struct FISContract.TokenSavingsData))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_struct(TokenSavingsData)141_storage)"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_bool)"
      },
      "t_mapping(t_address,t_struct(Investment)214_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct FISContract.Investment)",
        "numberOfBytes": "32",
        "value": "t_struct(Investment)214_storage"
      },
      "t_mapping(t_address,t_struct(TokenSavingsData)141_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct FISContract.TokenSavingsData)",
        "numberOfBytes": "32",
        "value": "t_struct(TokenSavingsData)141_storage"
      },
      "t_mapping(t_address,t_struct(User)168_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct FISContract.User)",
        "numberOfBytes": "32",
        "value": "t_struct(User)168_storage"
      },
      "t_mapping(t_uint256,t_bool)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_struct(Group)191_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct FISContract.Group)",
        "numberOfBytes": "32",
        "value": "t_struct(Group)191_storage"
      },
      "t_mapping(t_uint256,t_struct(Investment)214_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct FISContract.Investment)",
        "numberOfBytes": "32",
        "value": "t_struct(Investment)214_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Group)191_storage": {
        "encoding": "inplace",
        "label": "struct FISContract.Group",
        "members": [
          {
            "astId": 170,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 172,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "duration",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 174,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "targetAmount",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 177,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "visibility",
            "offset": 0,
            "slot": "3",
            "type": "t_enum(GroupVisibility)126"
          },
          {
            "astId": 179,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "title",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage"
          },
          {
            "astId": 181,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "description",
            "offset": 0,
            "slot": "5",
            "type": "t_string_storage"
          },
          {
            "astId": 183,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "category",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 186,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "groupMembers",
            "offset": 0,
            "slot": "7",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 188,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "creator",
            "offset": 0,
            "slot": "8",
            "type": "t_address"
          },
          {
            "astId": 190,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "timeCreated",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "320"
      },
      "t_struct(Investment)214_storage": {
        "encoding": "inplace",
        "label": "struct FISContract.Investment",
        "members": [
          {
            "astId": 193,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 195,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "title",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 197,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "description",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 199,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "depositPrice",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 201,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "duration",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 203,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "percentInterest",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 206,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "investmentParticipants",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 208,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "open",
            "offset": 0,
            "slot": "7",
            "type": "t_bool"
          },
          {
            "astId": 211,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "status",
            "offset": 1,
            "slot": "7",
            "type": "t_enum(Status)130"
          },
          {
            "astId": 213,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "totalDeposit",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "288"
      },
      "t_struct(TokenSavingsData)141_storage": {
        "encoding": "inplace",
        "label": "struct FISContract.TokenSavingsData",
        "members": [
          {
            "astId": 132,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "tokenAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 134,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "tokenBalance",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 136,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "saveDuration",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 138,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "timeSaved",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 140,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "tokenRewards",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_struct(User)168_storage": {
        "encoding": "inplace",
        "label": "struct FISContract.User",
        "members": [
          {
            "astId": 143,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "walletAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 145,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "telosBalance",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 147,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "telosDuration",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 149,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "timeSaved",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 152,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "tokens",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 154,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "rewardsEarned",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 157,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "groups",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_uint256)dyn_storage"
          },
          {
            "astId": 160,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "circle",
            "offset": 0,
            "slot": "7",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 162,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "Goal",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          },
          {
            "astId": 164,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "investmentCollateral",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          },
          {
            "astId": 167,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "investments",
            "offset": 0,
            "slot": "10",
            "type": "t_array(t_uint256)dyn_storage"
          }
        ],
        "numberOfBytes": "352"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}